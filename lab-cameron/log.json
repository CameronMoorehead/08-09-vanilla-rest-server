{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:19.533Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:19.620Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:19.677Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:19.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:19.680Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:19.680Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:34.536Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:34.587Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:34.644Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:34.646Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:54.862Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:54.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:54.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:54.973Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:16:34.530Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:16:34.586Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:16:34.643Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:16:34.644Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:37.965Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:20:38.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:20:38.075Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:10.272Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:10.325Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:32.138Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:32.205Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:32.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:21:32.264Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.778Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:38.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:38.886Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:58.770Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:58.826Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:07.732Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:07.790Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:07.844Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:48.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:48.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:48.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:24:29.521Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:24:29.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:24:29.627Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:24:29.628Z"}
{"id":{},"timestamp":"2017-12-07T01:24:29.628Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.729Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:04.784Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:04.841Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:04.843Z"}
{"id":{},"timestamp":"2017-12-07T01:25:04.843Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:44.652Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:44.705Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:44.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:44.759Z"}
{"name":"name","description":"description","id":{},"timestamp":"2017-12-07T01:25:44.759Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:59.079Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:59.131Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:59.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:59.148Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:27:38.153Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:27:38.207Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:27:38.208Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:29:38.076Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:29:38.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:29:38.183Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"nonsense","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:07.296Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:07.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:07.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:07.368Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:46.059Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:46.112Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:46.114Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:31:15.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:31:15.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:31:15.274Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:35:59.253Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:35:59.254Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:35:59.254Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:36:25.385Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:36:25.386Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:36:25.386Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:36:52.199Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:36:52.200Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:36:52.200Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:37:21.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:37:21.368Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:37:21.368Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:37:28.352Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:37:28.353Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:37:28.353Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:42:20.386Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:42:20.388Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:42:20.388Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:42:31.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:42:31.495Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:42:31.495Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:35.323Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:35.324Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:35.324Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:35.903Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:35.905Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:35.905Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:37.157Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:37.158Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:37.158Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:47:43.578Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:47:43.579Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:47:43.579Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:13.008Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:48:13.010Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:48:13.010Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:13.017Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:27.504Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:48:27.505Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:48:27.505Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:27.514Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:00.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:00.114Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:00.115Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:00.115Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:00.215Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:25.746Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:25.747Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:25.747Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:25.747Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:25.837Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.306Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.420Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.420Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.420Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.865Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.972Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.268Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.269Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.269Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.269Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.370Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.561Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.562Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.562Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.562Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.679Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.781Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.885Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.886Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.886Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.886Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.945Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.056Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.056Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.057Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.057Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.110Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.223Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.224Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.224Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.224Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:49:59.049Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:49:59.050Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:49:59.050Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:49:59.060Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:50:06.082Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:50:06.084Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:50:06.084Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:50:06.092Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:21.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:21.022Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:21.022Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:21.033Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:27.791Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:27.792Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:27.792Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:27.802Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:31.603Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:31.605Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:31.605Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:31.613Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:56:59.929Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:56:59.930Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:56:59.930Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:56:59.939Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:05.274Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:05.275Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:05.275Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:05.282Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:09.331Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:09.332Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:09.332Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:09.339Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:16.760Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:16.761Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:16.761Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:16.770Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:24.177Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:24.178Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:24.178Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:24.185Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:21.392Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:21.396Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:21.396Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:21.396Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:21.523Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:21.523Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:21.524Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:21.524Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:35.278Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:35.279Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:35.279Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:35.279Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:35.410Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:37.687Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:37.808Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:37.809Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:37.809Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:37.809Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:43.085Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:43.214Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:43.214Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:43.215Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:43.215Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:17:15.918Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:17:15.919Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:17:15.919Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:17:15.928Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:20:52.125Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:20:52.126Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:20:52.126Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:20:52.135Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:01.717Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:01.718Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:01.718Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:01.728Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:13.302Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:13.303Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:13.303Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:13.311Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:40.276Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:40.277Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:40.277Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:40.287Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:49.148Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:49.149Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:49.149Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:49.160Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:52.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:52.369Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:52.369Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:52.379Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:25:08.602Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:25:08.603Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:25:08.603Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:25:08.614Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.177Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.179Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.179Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.179Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.189Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.190Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.190Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.190Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.193Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.195Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.202Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.203Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.203Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.203Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.206Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.206Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T02:25:24.206Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:05.495Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:05.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:05.496Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:26:10.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:26:10.574Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:10.575Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:26:10.575Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:26:10.575Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:26:10.587Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:39.257Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:39.258Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:39.258Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:26:39.265Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:42.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:42.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:42.351Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:26:47.417Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:26:47.420Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:47.421Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:26:47.421Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:26:47.421Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:26:47.435Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:53.553Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:53.554Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:53.554Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:26:53.562Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:27:04.423Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:27:04.424Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:04.424Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:27:04.430Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:27:34.104Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:27:34.105Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:34.106Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:27:39.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:27:39.183Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:27:39.199Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:28:05.453Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:28:05.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:05.454Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:28:05.506Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:28:05.524Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:28:05.526Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:28:39.168Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:28:39.216Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:28:39.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:39.218Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:28:39.218Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:28:39.218Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:01.284Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:01.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:01.285Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:29:01.341Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:29:01.357Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:29:01.359Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:39.845Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:39.846Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:39.846Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:29:39.853Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:45.280Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:45.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:45.281Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:30:00.354Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:30:00.355Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:00.355Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:30:00.364Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:30:03.323Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:30:03.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:03.324Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:30:03.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:30:03.394Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:03.394Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:30:03.395Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:30:03.395Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:31:20.197Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:31:20.199Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:31:20.199Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:31:20.207Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:32:05.458Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:32:05.459Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:05.459Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:32:05.469Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:32:10.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:32:10.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:10.535Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:32:10.599Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:32:10.602Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:33:43.942Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:33:43.943Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:33:43.943Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:33:43.950Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:38:48.526Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:38:48.527Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:38:48.527Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:38:48.539Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:39:17.559Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:39:17.560Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:39:17.560Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:39:17.568Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:05.486Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:05.487Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:05.487Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:41:05.498Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:10.354Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:10.355Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:10.355Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:41:10.365Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:36.209Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:36.210Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:36.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:41:36.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:41:36.314Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:42:38.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"Responding with a 400 code due to content not found","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:43:25.247Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:15.382Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:15.383Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:15.383Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:47:15.391Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:19.210Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:19.213Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:23.030Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:46.420Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:46.421Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:46.421Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:47:46.429Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:49.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:49.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:49.369Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:49.432Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:49.435Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:47:49.435Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:47:49.436Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:49.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:49.490Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:49.490Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:49.491Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:47:49.491Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:02.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:02.064Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:02.064Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:02.074Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:33.922Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:33.923Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:33.923Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:33.931Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:34.557Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:34.558Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:34.558Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:34.566Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:49:24.112Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:49:24.113Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:49:24.113Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:49:24.121Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:01.325Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:01.326Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:01.326Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:01.337Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:49.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:49.880Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:49.880Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:49.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:59.138Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:59.139Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:59.139Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:59.150Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:51:04.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:51:04.240Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:04.240Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:51:04.248Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:51:49.207Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:51:49.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:49.208Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:51:49.311Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:51:49.313Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:51:49.313Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:51:49.313Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:51:49.324Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:51:49.325Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:06.956Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:06.957Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:06.958Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:06.966Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:13.134Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:13.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:13.135Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:18.206Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:18.209Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:54:18.209Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:54:18.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:18.223Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:18.225Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:18.225Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:54:18.225Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:54:18.226Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:54:18.242Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:18.434Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:18.435Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:18.435Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:18.446Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:21.810Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:21.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:21.811Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:21.874Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:21.877Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:54:21.877Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:54:21.877Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:21.888Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:54:21.890Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:36.865Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:36.866Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:36.866Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:36.879Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:41.100Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:41.101Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:41.102Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:41.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:48.056Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:48.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:48.057Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:48.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:48.167Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:35:48.168Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:35:48.168Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:48.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:48.180Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:48.180Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:35:48.181Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:35:48.181Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:36:42.965Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:36:42.966Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:36:42.966Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:36:42.977Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:36:50.696Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:36:50.697Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:36:50.698Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:36:50.708Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:02.135Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:02.136Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:02.136Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:02.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:02.214Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:37:02.214Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:37:02.214Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:02.225Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:37:02.228Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:30.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:30.701Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:30.701Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:37:30.710Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:35.934Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:35.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:35.935Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:36.037Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:36.040Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:37:36.040Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:37:36.040Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:36.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:37:36.052Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:39:59.814Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:39:59.816Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:39:59.816Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:39:59.825Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:40:04.570Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:40:04.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:40:04.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:40:04.673Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:40:04.675Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:40:04.675Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:40:04.675Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:40:04.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:40:04.688Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:40:04.688Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:40:04.689Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:40:04.689Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:13.638Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:13.640Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:13.641Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:42:13.649Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:18.145Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:18.146Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:18.146Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:42:18.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:42:18.250Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:42:18.250Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:42:18.250Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:42:18.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:42:18.264Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:34.334Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:34.335Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:34.335Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:42:34.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:43:08.297Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:43:08.299Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:43:08.299Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:43:08.299Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:43:08.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:43:08.311Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:08.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:43:08.312Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:43:08.312Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:43:59.585Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:43:59.587Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:59.587Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:43:59.597Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:44:44.967Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:44:44.968Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:44.968Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:44:44.979Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:44:50.004Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:44:50.005Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:50.005Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:44:50.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:44:50.117Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:44:50.117Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:44:50.117Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:44:50.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"[object Object]","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:44:50.131Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:44:50.131Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:13.096Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:13.097Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:13.097Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:45:13.106Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:45.836Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:45.837Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:45.838Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:45:45.848Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:50.895Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:50.896Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:50.896Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:45:50.998Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:45:51.001Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:45:51.001Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:45:51.001Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:45:51.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:45:51.014Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:51.015Z"}
{"POST":{},"GET":{},"DELETE":{},"PUT":{},"level":"info","message":"aaa","timestamp":"2017-12-07T03:45:51.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:45:51.015Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:45:51.015Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:46:45.032Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:46:45.033Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:46:45.033Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:46:45.044Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:48.668Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:46:48.670Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:46:48.670Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:46:48.670Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:48.691Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:17.233Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:17.234Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:17.234Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:17.243Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:20.128Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:20.129Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:20.129Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:26.989Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:26.990Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:26.990Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:27.046Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:48:27.061Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:48:27.062Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:44.491Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:44.492Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:44.492Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:44.548Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:48:44.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:48:44.603Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:49:18.541Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:49:18.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:49:18.542Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:49:18.592Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:49:18.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:49:18.654Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:04.088Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:04.089Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:04.089Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:04.142Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:04.157Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:04.158Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:04.158Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:04.159Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:04.159Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:41.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:41.485Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:41.485Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:41.537Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:41.593Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:41.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:41.594Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:41.596Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:41.596Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:55.000Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:55.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:55.001Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:55.053Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:55.108Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:55.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:55.109Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:55.110Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:55.110Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:52:15.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:52:15.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:52:15.008Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:52:15.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:15.115Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:15.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:52:15.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:52:15.117Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:52:15.117Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:55:25.854Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:55:25.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:55:25.855Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:55:25.906Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:55:25.959Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:55:25.961Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:58:24.275Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:58:24.276Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:58:24.276Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:58:24.331Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:58:24.385Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:58:24.386Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:58:24.386Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:58:24.387Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:58:24.387Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:59:46.300Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:59:46.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:59:46.301Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:59:46.355Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:59:46.369Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:59:46.371Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:01:57.172Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:01:57.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:01:57.173Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:01:57.225Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:01:57.280Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:01:57.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:01:57.281Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:01:57.283Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:01:57.284Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:02:42.989Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:02:42.990Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:02:42.990Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:02:43.047Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:02:43.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:02:43.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:02:43.112Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:02:43.114Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:02:43.114Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:04:29.720Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:04:29.777Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:04:29.779Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T04:04:29.779Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T04:04:29.779Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:06:34.167Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:06:34.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log('response body', response.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:06:34.168Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:06:34.218Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:06:34.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:06:34.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log('response body', response.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:06:34.274Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:06:34.276Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:06:34.276Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:07:01.122Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:07:01.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:01.123Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:07:01.178Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:07:01.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:07:01.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:01.235Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:07:01.238Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:07:01.238Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:07:30.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:07:30.629Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:07:30.631Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:30.631Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:07:30.633Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:07:30.633Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:08:22.078Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:08:22.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:08:22.079Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:08:22.132Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:08:22.190Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:08:22.191Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:08:22.191Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:08:22.194Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:08:22.194Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:15:55.730Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:15:55.785Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:15:55.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:15:55.786Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:15:55.789Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:15:55.789Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:16:19.153Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:16:19.206Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:16:19.264Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:16:19.265Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:19.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:16:19.268Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:16:19.268Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:16:44.658Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:16:44.710Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:16:44.766Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:16:44.768Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:21:41.618Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:21:41.676Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:22:11.234Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:22:11.291Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:22:11.345Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:22:11.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:22:11.346Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:24:05.889Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:24:05.944Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:24:05.945Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:24:05.945Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:25:10.130Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:25:10.189Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:25:39.102Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:39.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:25:39.103Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:25:39.162Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:27:04.113Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:27:04.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:27:04.115Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:27:04.167Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:28:42.401Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:42.402Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:42.402Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:28:42.455Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:28:42.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:28:42.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:42.478Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:28:42.478Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:28:42.478Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:28:54.098Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:54.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:28:54.152Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:28:54.170Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:28:54.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:54.171Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:28:54.172Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:28:54.172Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:29:11.528Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:29:11.586Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:29:11.653Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:29:11.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:29:11.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:29:11.656Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:29:11.656Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:30:48.012Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:30:48.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:30:48.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:30:48.138Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:30:48.138Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:30:48.141Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:30:48.141Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:38:41.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:38:41.495Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:38:41.495Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:38:41.660Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:38:41.682Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:38:41.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:38:41.683Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:38:41.685Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:38:41.685Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:41:34.144Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:41:34.199Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:41:34.251Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:41:34.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:41:34.252Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:41:34.261Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:41:34.271Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:41:34.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:41:34.273Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:41:34.274Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:41:34.274Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:42:01.296Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:42:01.351Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:01.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:01.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:01.407Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:42:01.408Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:01.418Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:01.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:01.419Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:42:01.420Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:42:01.420Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:42:33.878Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:42:33.952Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:34.006Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:34.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:34.007Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:42:34.009Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:34.020Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:34.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:34.022Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:42:34.023Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:42:34.023Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:49:18.975Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON = (response, 200, users);\n}","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:49:19.029Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:19.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:19.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON = (response, 200, users);\n}","timestamp":"2017-12-07T04:49:19.086Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:24.045Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:24.046Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:24.046Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T04:49:24.048Z"}
{"message":"sendJSON is not a function","stack":"TypeError: sendJSON is not a function\n    at Object.<anonymous>.router.post (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:50:3)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T04:49:24.048Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:49:46.022Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:49:46.075Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:46.130Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:46.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:49:46.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:49:46.131Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:46.143Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:46.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:46.144Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:49:46.145Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:49:46.145Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:50:31.287Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:50:31.343Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:50:31.344Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:50:31.344Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:50:31.344Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:50:31.356Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:50:31.356Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:50:31.357Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:50:31.357Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:50:31.357Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:53:07.882Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T04:53:07.995Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:53:53.129Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:53:53.183Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:53:53.199Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:53:53.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:53.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:53:53.200Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:53:53.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:53:53.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:53.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:53:53.214Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:53:53.214Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:56:36.373Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:56:36.427Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:36.484Z"}
[{"name":"test_name_1","description":"test_description_1"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:36.494Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:36.495Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:56:36.495Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:36.497Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:56:36.497Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:57:36.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:57:36.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:57:36.930Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:57:36.987Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:57:36.997Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:57:36.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:57:36.998Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:57:37.000Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:57:37.000Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:59:33.297Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:59:33.357Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:33.412Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:33.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:33.413Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:33.413Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:33.424Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:33.425Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:33.425Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:33.427Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:59:33.427Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:59:56.628Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:59:56.685Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:56.740Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:56.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:56.741Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:56.741Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:56.752Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:56.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:56.753Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:56.755Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:59:56.755Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:00:37.236Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:00:37.294Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:37.347Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:37.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:00:37.348Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:37.348Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:37.359Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:37.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:00:37.360Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:37.362Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:00:37.362Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:03:41.680Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:03:41.738Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.793Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.794Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.794Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.794Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.806Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.813Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:03:41.813Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:04:13.490Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:04:13.547Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.602Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.613Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.614Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.614Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.621Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:04:13.622Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.624Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:04:13.625Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:05:00.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:05:00.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.491Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:05:00.508Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.508Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:05:00.509Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:07:21.318Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:07:21.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:07:21.375Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.391Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.392Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.393Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.406Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.406Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:07:21.423Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.424Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:07:21.424Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:08:49.871Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:08:49.928Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:49.982Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:49.994Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:49.995Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.995Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:49.995Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:50.014Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:08:50.014Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:58.891Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:58.891Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:08:58.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:58.999Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:59.000Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.000Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.016Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:59.022Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:59.023Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.025Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:08:59.025Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:09:55.258Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:09:55.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:09:55.316Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.369Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.371Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.371Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.383Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.384Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.384Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.384Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.391Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:09:55.392Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.395Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:09:55.395Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:11:13.374Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.427Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.428Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.428Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.442Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:13.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.449Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:11:13.449Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:11:54.675Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:11:54.733Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.786Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.787Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.787Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.787Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.800Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.804Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:54.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.806Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:11:54.806Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:08.174Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:08.232Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.286Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.287Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.287Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.300Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.306Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:08.306Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:16.925Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:16.981Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:16.996Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:16.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:16.997Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:16.997Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:17.010Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:17.014Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:17.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:17.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:17.017Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:17.017Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:34.459Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:34.515Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.568Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.569Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.569Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.581Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.585Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.586Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:34.586Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.587Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:34.587Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:13:10.373Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:13:10.429Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.484Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.484Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.499Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.503Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.504Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:13:10.504Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.507Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:13:10.507Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:14:02.635Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:02.637Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:02.637Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:14:02.702Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.759Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.760Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.760Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.760Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.775Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.775Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.775Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.778Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:02.779Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.780Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:14:02.780Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:14:16.745Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:14:16.802Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.856Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.868Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.869Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.869Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.869Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.872Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.873Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:16.873Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.874Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:14:16.874Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:15:18.277Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:15:18.335Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.388Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.389Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.405Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.412Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:15:18.412Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.414Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:15:18.414Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:16:51.167Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:16:51.224Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.277Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.278Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.278Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.292Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.293Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.293Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:16:51.301Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.304Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:16:51.304Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:18:32.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:18:32.665Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.717Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.718Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.718Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.732Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.733Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.733Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.743Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:32.744Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.746Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:18:32.746Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:18:48.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:48.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:18:48.422Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.490Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.490Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.490Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:48.499Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.502Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:18:48.502Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:20:06.308Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:06.310Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:20:06.367Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.420Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.434Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.435Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.435Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:06.443Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.445Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:20:06.445Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:20:46.046Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:20:46.102Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.153Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.154Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.166Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.167Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.167Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.167Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.173Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:46.174Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.177Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:20:46.178Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:21:12.887Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:21:12.940Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:12.994Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:13.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:13.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:13.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:13.010Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:13.019Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:21:13.019Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:28.125Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:21:28.183Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.235Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.236Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.236Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.251Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.252Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.252Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.259Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.260Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:28.260Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.262Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:21:28.262Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:15.936Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:15.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:15.993Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.043Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.044Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:16.044Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.044Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.057Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:16.065Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.067Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:16.067Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:30.184Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:30.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.293Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.294Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.294Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.294Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.308Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.317Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:30.318Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.321Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:30.321Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:36.827Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:36.884Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.939Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.940Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.940Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.954Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.956Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.956Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.963Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:36.964Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.966Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:36.966Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:54.054Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:54.112Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.166Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.166Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.182Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.182Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.187Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:54.189Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.191Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:54.191Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:23:25.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:23:25.769Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.824Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.837Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.838Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.838Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.842Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:25.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.845Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:23:25.845Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:23:41.218Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:23:41.275Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.329Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.330Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.330Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.330Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.344Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.345Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.345Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.353Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:41.354Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.356Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:23:41.356Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:29:46.244Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:29:46.296Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.350Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.351Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.351Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.352Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.372Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.373Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.374Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.381Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:29:46.381Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:30:12.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:30:12.925Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:30:12.975Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.031Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:13.031Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.032Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.052Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.054Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:13.054Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.054Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.061Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:30:13.061Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:34:26.613Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:34:26.667Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:34:26.721Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:34:26.723Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:26.723Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:34:31.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:34:31.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:31.686Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:35:53.575Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:35:53.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:35:53.683Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:35:53.684Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:35:53.684Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:36:37.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:36:37.765Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:36:37.822Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:36:37.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:37.823Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:36:42.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:36:42.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:42.785Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:37:52.775Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:37:52.777Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:37:52.827Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:37:52.878Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:37:52.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:52.880Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:37:57.840Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:37:57.841Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:57.842Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:02.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:02.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:02.850Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:02.851Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:38:02.851Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:38:26.204Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:38:26.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:26.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:26.311Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:26.311Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:26.330Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:26.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.331Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:31.334Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:31.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:31.335Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:31.336Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:38:31.336Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:39:28.685Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:39:28.744Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:28.795Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:28.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.796Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:39:28.796Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:28.809Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:28.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.810Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:33.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:33.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:39:33.819Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:39:33.821Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:39:33.821Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:40:51.159Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:40:51.215Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.273Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.273Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.287Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.288Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.293Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.295Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:40:51.295Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.298Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:40:51.298Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:41:38.142Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:41:38.193Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.249Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.265Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.266Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.273Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:41:38.273Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:46:53.963Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:46:54.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.073Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:54.074Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.075Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.087Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.088Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:46:54.091Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.095Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.097Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:46:54.097Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.099Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:46:54.099Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:49:53.633Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:49:53.684Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.737Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.738Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.740Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.752Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.753Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.754Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:49:53.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:49:53.757Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.762Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:49:53.764Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.765Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:49:53.765Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:50:45.038Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:50:45.093Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.108Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.109Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.110Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.121Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.122Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.123Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:50:45.123Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:50:45.126Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.130Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:50:45.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.133Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:50:45.133Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:52:31.941Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:31.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:52:31.992Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:32.051Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.051Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.065Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:52:32.069Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.077Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.078Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:52:43.785Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:52:43.836Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.892Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.893Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.893Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.893Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.905Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.906Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.906Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.906Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:52:43.907Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.910Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:52:43.910Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:52:43.910Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.917Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:43.918Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.919Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:52:43.919Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:53:49.008Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:53:49.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.115Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.115Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.115Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.127Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.128Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.131Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.131Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:53:49.131Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:53:49.132Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:53:49.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.138Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:53:49.138Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:54:08.378Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:54:08.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.486Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.487Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.487Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.488Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.503Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.504Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:54:08.504Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:54:08.507Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.513Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.514Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:55:19.023Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:55:19.076Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.130Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.141Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.142Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.142Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.142Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:55:19.143Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:55:19.146Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.150Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.151Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:55:44.700Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:55:44.758Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.812Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.812Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.825Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.826Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:55:44.829Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.834Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.835Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:44.835Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.836Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:55:44.836Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:56:10.042Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:56:10.093Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.153Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.153Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.153Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.166Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.169Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.170Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:56:10.170Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:56:10.170Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.174Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.175Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:56:46.414Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[33]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[39]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[40]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:56:46.500Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.556Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.557Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.557Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.558Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.570Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.571Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.574Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:56:46.575Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:56:46.575Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[33]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[39]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[40]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.580Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:56:46.580Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:58:57.374Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:58:57.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.449Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.461Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.462Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.466Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:58:57.466Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:58:57.467Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.472Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.473Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:59:27.711Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:59:27.711Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:59:27.772Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.828Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.841Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.842Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:59:27.845Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.850Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.852Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:01:10.493Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:01:10.554Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:01:10.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:01:10.609Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:01:10.609Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:01:10.609Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:03:37.345Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:03:37.396Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:03:37.451Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:03:37.452Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:03:37.452Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:03:37.452Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:05:37.457Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:05:37.508Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:05:37.565Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:05:37.566Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:05:37.566Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:05:37.566Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:05:50.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:05:50.391Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:05:50.407Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:05:50.408Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:05:50.408Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:05:50.408Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:07:45.298Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:07:45.300Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:07:45.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:07:45.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:07:45.406Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:07:45.406Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:07:45.406Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:08:47.052Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:08:47.111Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:08:47.167Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:08:47.167Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:08:47.168Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:08:47.168Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:08:57.189Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:08:57.249Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:08:57.306Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:08:57.307Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:08:57.307Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:08:57.307Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:09:04.528Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:09:04.584Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.637Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.638Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.638Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.652Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:09:04.652Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:09:04.656Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.661Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.662Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:09:04.662Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.663Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:09:04.663Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:12:52.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:12:52.485Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:12:52.539Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:12:52.540Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:12:52.540Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:12:52.540Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:13:04.072Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:13:04.131Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.186Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.187Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.187Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.187Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.199Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.200Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.203Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.204Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:13:04.204Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:13:04.204Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.209Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:13:04.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.211Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:13:04.211Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:13:04.211Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:33:22.824Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:33:22.879Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.935Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.936Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.937Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.950Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.950Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:33:22.950Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:22.953Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.958Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.959Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.962Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:22.963Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:33:22.963Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.965Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:34:35.796Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:34:35.855Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:34:35.910Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:34:35.911Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:35.911Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:34:35.912Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:34:35.912Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:34:44.547Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:34:44.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:34:44.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:34:44.664Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:35:28.388Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:35:28.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:35:28.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:28.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:35:28.447Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:35:28.448Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:35:42.345Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:42.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 404, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:35:42.400Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:35:42.457Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:35:42.458Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:27.255Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:27.314Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:27.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:27.372Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:27.372Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:27.372Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:42.682Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.682Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:42.740Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:42.794Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:42.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:42.796Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:42.796Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:49.425Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:49.482Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:49.538Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:49.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:49.539Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:49.540Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:37:05.280Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:37:05.336Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:37:05.387Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:05.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:05.388Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:37:05.389Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved);\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:37:49.765Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:37:49.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:49.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved);\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:49.825Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:37:49.827Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:38:27.533Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved.getId());\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:38:27.590Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:38:27.648Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:38:27.649Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved.getId());\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:38:27.649Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:38:27.650Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:39:19.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log('these should match at least 1x', userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:39:19.392Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:39:19.449Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:39:19.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log('these should match at least 1x', userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:39:19.451Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:39:19.452Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:40:56.829Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:40:56.831Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:40:56.890Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:40:56.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:40:56.950Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:40:56.950Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:40:56.951Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:46:59.754Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:46:59.815Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:46:59.872Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:46:59.873Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:46:59.873Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:46:59.874Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:46:59.874Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:47:04.930Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:47:04.948Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:47:04.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:47:04.949Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:47:04.950Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:47:04.950Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:50:04.674Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:04.732Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:04.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:04.733Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:04.734Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:50:04.734Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:50:41.692Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:50:41.748Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.801Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.802Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.802Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.802Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.817Z"}
{"meta":false,"level":"info","message":"","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.824Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:41.825Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:50:41.825Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.830Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.831Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.834Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:41.835Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:50:41.835Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:52:03.473Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:52:03.530Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.582Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.583Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.583Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.597Z"}
{"meta":false,"level":"info","message":"","timestamp":"2017-12-07T06:52:03.597Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.603Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.603Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:52:03.603Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:52:03.604Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.609Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.613Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:52:03.613Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:52:03.613Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:53:29.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:53:29.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:53:29.115Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:53:29.115Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:53:29.115Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:55:08.016Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:55:08.068Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:08.123Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:08.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:08.124Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:08.124Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:55:23.033Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:55:23.085Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.100Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.112Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.113Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.113Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.113Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:55:23.119Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.122Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.123Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.126Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:55:23.126Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:55:23.126Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:56:00.606Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:56:00.669Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.731Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.732Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.732Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.732Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.747Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.748Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.748Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.748Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:00.754Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.758Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.761Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:00.761Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:56:00.761Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:56:46.698Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:56:46.750Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.806Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.818Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.818Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:46.824Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.828Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.832Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:46.833Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:56:46.833Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:57:13.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:57:13.420Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.475Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.491Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.498Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:13.498Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:57:13.498Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:13.504Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.504Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:57:13.504Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.507Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:13.507Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:57:13.507Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:57:38.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:57:38.368Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:57:38.422Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.477Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.478Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.478Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.479Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.492Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.498Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:38.498Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:57:38.498Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.502Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:57:38.502Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.504Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:38.504Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:57:38.505Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:02.061Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:02.116Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.171Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.172Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.172Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.172Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.185Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:02.191Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.194Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:02.196Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.196Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:02.196Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.199Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:02.199Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:02.199Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:22.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:22.322Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.398Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.398Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.398Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.421Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.422Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.422Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.423Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.438Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.438Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:22.439Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:22.439Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.443Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.444Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.450Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:22.450Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:22.451Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:57.291Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:57.346Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.362Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.363Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.363Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.363Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.375Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.377Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.377Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.383Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.384Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:57.384Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:57.384Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.388Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:57.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.389Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:57.389Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.392Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:57.393Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:57.393Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:10:24.703Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:10:24.761Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:10:24.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:10:24.816Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:10:24.816Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:10:24.817Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:10:24.817Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:15:31.288Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:15:31.348Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.402Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.402Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.403Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.403Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.416Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.417Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.423Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.423Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:15:31.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:15:31.427Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.428Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:15:31.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.431Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.431Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:15:31.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.433Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:15:31.434Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.435Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:15:31.435Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:23:05.187Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:23:05.271Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.355Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.356Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:23:05.356Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:23:05.356Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.378Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.378Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:23:05.378Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:23:05.379Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.384Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.385Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:23:05.385Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:23:05.386Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:23:05.386Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.394Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:23:05.394Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:23:05.394Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:25:11.126Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:25:11.178Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.232Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:25:11.233Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:25:11.233Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.244Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.245Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:25:11.245Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:25:11.245Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:25:11.250Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:25:11.250Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.252Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:25:11.253Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:25:11.253Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:27:45.106Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:27:45.157Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:45.214Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:27:54.005Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:27:54.092Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.115Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:54.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:27:54.116Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.135Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.137Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:27:54.137Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:27:54.137Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:27:54.145Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.149Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:27:54.150Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:27:54.150Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.156Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:28:14.480Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:28:14.536Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.593Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:28:14.594Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:28:14.594Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.606Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:28:14.607Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:28:14.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:28:14.611Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:28:14.611Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:28:14.612Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.614Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:28:14.614Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:28:14.615Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:12:54.472Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:12:54.472Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:54.473Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:12:54.608Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:54.630Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:54.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:12:54.632Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:12:54.633Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:12:54.633Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:54.646Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:12:54.647Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:12:54.648Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:54.655Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:54.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:12:54.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:12:54.655Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:54.662Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:54.662Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:12:54.662Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:12:54.662Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:12:54.666Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:12:54.666Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:12:54.666Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:12:54.667Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:13:29.039Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:29.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:13:29.040Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:29.041Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:13:29.207Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:29.265Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:29.267Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:13:29.267Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:29.267Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:13:29.267Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:29.279Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:13:29.280Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:13:29.280Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:29.284Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:29.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:13:29.284Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:29.285Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:29.288Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:29.289Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:13:29.289Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:13:29.289Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:29.291Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:29.291Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:29.291Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:13:29.291Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:13:42.357Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:42.358Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:13:42.415Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:42.468Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:42.470Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:13:42.470Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:42.470Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:13:42.470Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:42.481Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:13:42.481Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:13:42.481Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:42.485Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:42.485Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:13:42.485Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:13:42.485Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:42.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:42.489Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:13:42.489Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:13:42.489Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:13:42.492Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:13:42.493Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:13:42.493Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:13:42.493Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:14:31.385Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:14:31.385Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:14:31.385Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:14:31.385Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:14:31.386Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:14:31.386Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:14:31.386Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:14:31.386Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:14:31.386Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:14:31.441Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.492Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:14:31.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:14:31.494Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:14:31.494Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:14:31.494Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.504Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:14:31.505Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:14:31.505Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.508Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:14:31.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:14:31.508Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:14:31.509Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.512Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:14:31.513Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:14:31.513Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:14:31.513Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.519Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:14:31.519Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:14:31.519Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:14:31.519Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:14:31.521Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:14:31.521Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:14:31.521Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:14:31.521Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:15:33.407Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:15:33.408Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:15:33.464Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.518Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:15:33.519Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[28]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[29]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[37]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:15:33.519Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:15:33.520Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:15:33.520Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.530Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:15:33.531Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:15:33.531Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.534Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:15:33.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:15:33.534Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:15:33.535Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.538Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:15:33.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:15:33.539Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:15:33.539Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.542Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:15:33.543Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:15:33.543Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:15:33.543Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:15:33.545Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:15:33.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[41]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:15:33.545Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:15:33.546Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:17:44.553Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:17:44.554Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:17:44.608Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:44.665Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:17:44.665Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:44.665Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:17:44.665Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.675Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:17:44.676Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:17:44.676Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.679Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:44.679Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:44.680Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:44.680Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.683Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:44.684Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:44.684Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:44.684Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.688Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:44.688Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:17:44.688Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:17:44.688Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:44.691Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:44.692Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:17:44.692Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:17:44.692Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:17:54.715Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:17:54.716Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:17:54.773Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.829Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:54.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:17:54.831Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:54.831Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:17:54.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.843Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:17:54.844Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:17:54.844Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:54.848Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:54.848Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:54.848Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.853Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:54.854Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:17:54.854Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:17:54.854Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.859Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:54.859Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:17:54.859Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:17:54.859Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:17:54.861Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:17:54.862Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:17:54.862Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:17:54.862Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:18:57.225Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:18:57.226Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:18:57.282Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.336Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:18:57.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:18:57.338Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:18:57.338Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:18:57.338Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.348Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:18:57.349Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:18:57.349Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.352Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:18:57.352Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:18:57.353Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:18:57.353Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.357Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:18:57.357Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:18:57.357Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:18:57.358Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.363Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:18:57.363Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:18:57.364Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:18:57.364Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:18:57.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:18:57.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:18:57.366Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:18:57.366Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:19:44.924Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:19:44.925Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:19:44.992Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.054Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:19:45.056Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:19:45.056Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:19:45.057Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:19:45.057Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.068Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:19:45.069Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:19:45.069Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.073Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:19:45.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:19:45.074Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:19:45.074Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.077Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:19:45.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:19:45.078Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:19:45.078Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.083Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:19:45.084Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:19:45.084Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:19:45.084Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:19:45.087Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:19:45.087Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:19:45.087Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:19:45.088Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:21:25.031Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:21:25.032Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:21:25.091Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:25.145Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:25.146Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:21:25.146Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:25.146Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:21:25.146Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:21:25.158Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:21:25.159Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:21:25.159Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:21:25.160Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:23:30.313Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:23:30.314Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:23:30.371Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:23:30.425Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:23:30.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:23:30.427Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:23:30.427Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:23:30.427Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:23:30.438Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:23:30.439Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:23:30.439Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:23:30.439Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:23:59.571Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:59.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:23:59.572Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:23:59.572Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:59.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:23:59.573Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:23:59.573Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:23:59.573Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:23:59.573Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:23:59.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:23:59.684Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:23:59.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:23:59.685Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:23:59.685Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:23:59.685Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:23:59.697Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:23:59.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:23:59.698Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:23:59.698Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:24:46.523Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:24:46.524Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:24:46.524Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:24:46.524Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:24:46.525Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:24:46.525Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:24:46.525Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:24:46.525Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:24:46.525Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:24:46.588Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:24:46.645Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:24:46.647Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:24:46.647Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:24:46.647Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:24:46.647Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:24:46.660Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:24:46.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:24:46.661Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:24:46.661Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:25:21.551Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:25:21.552Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:25:21.611Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:21.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:21.665Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:25:21.665Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:25:21.665Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:25:21.665Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:25:21.677Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:25:21.677Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:25:21.678Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:25:21.678Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:37:32.231Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:37:32.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:37:32.231Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:37:32.232Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:37:32.284Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:32.339Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:32.340Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:37:32.340Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:32.340Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:37:32.353Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:37:32.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:37:32.354Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:37:32.354Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:37:32.354Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:38:00.303Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:38:00.304Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:38:00.362Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:00.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:38:00.416Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:38:00.416Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.430Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:00.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:38:00.431Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:38:00.432Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.435Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:00.435Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:38:00.436Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:38:00.436Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.440Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:00.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:38:00.441Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:38:00.441Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:38:00.441Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.444Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:38:00.444Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:38:00.444Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:00.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:00.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:38:00.447Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:38:00.447Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:68:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:38:00.447Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:38:05.449Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:38:05.450Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:38:05.450Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:38:05.451Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:39:24.109Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:39:24.110Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:39:24.166Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:24.219Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:24.220Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:39:24.220Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:39:24.220Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:24.231Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:24.232Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:39:24.232Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:39:24.232Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:39:24.232Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:24.236Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:39:24.236Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:39:24.236Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:24.239Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:24.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:39:24.240Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:39:24.241Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:68:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:39:24.241Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:29.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:29.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:39:29.243Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:39:29.243Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:39:51.974Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:39:51.975Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:39:52.033Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:52.086Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:52.087Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:39:52.087Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:39:52.087Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:52.098Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:52.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:39:52.099Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:39:52.099Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:39:52.099Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:52.103Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:39:52.103Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:39:52.103Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:39:52.105Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:39:52.106Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:39:52.106Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:39:52.106Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:41:20.121Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:20.122Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:41:20.180Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:20.235Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:20.236Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:20.236Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:41:20.236Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:20.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:20.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:20.248Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:20.248Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:41:20.248Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:20.252Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:20.252Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:41:20.252Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:20.255Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:20.255Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:20.255Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:41:20.255Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:41:30.187Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:30.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:41:30.188Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:41:30.188Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:30.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:30.188Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:41:30.189Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:30.189Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:30.189Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:41:30.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.294Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:30.295Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:30.295Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:30.296Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:41:30.296Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.305Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:30.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:41:30.305Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:30.305Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.309Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:30.309Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:30.310Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:41:30.310Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.312Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:30.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:30.313Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:30.313Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:41:30.313Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.317Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:30.318Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:41:30.318Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:30.321Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:30.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:30.321Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:41:30.322Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:41:45.539Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:45.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:41:45.539Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:41:45.539Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:45.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:45.540Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:41:45.540Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:41:45.540Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:45.540Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:41:45.591Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.645Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:45.647Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:45.647Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:45.647Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:41:45.647Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.657Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:45.658Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:41:45.658Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:45.658Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.662Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:45.662Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:45.663Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:41:45.663Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.667Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:45.667Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:41:45.667Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:41:45.668Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:41:45.668Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.671Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:41:45.671Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:41:45.671Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:41:45.674Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:41:45.674Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:41:45.674Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:41:45.674Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:43:45.103Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:43:45.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:43:45.103Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:43:45.103Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:43:45.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:43:45.104Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:43:45.104Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:43:45.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:45.104Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:43:45.159Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.213Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.214Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:43:45.214Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:45.215Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:43:45.215Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.224Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.224Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:43:45.224Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:45.224Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.230Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.230Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:43:45.230Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:45.230Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:43:45.230Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.234Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:43:45.234Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:45.234Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.238Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.238Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:43:45.239Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:43:45.239Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.241Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:43:45.242Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:43:45.242Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:43:45.242Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.244Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:43:45.244Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:43:45.244Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:43:45.246Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:43:45.247Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:43:45.247Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:43:45.247Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:44:16.020Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:16.021Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:44:16.077Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.130Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.132Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:44:16.132Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:16.132Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:44:16.132Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.141Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.142Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:44:16.142Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:16.142Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.146Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.146Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:44:16.146Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:16.147Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:44:16.147Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.149Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:44:16.151Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:16.151Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.156Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.156Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:44:16.157Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:44:16.157Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.159Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.160Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:44:16.160Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:44:16.160Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:44:16.160Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.162Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:44:16.162Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:44:16.162Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:44:16.164Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:44:16.164Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:44:16.165Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:44:16.165Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:46:49.538Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:49.539Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:46:49.593Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.654Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:46:49.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:49.655Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:46:49.655Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.667Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.668Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:46:49.668Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:49.668Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.674Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.674Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:46:49.674Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:49.675Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:46:49.675Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.679Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.680Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:46:49.680Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:49.680Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.683Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.684Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:46:49.684Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:46:49.685Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.689Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.689Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:46:49.689Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:46:49.689Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:46:49.689Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.693Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:46:49.693Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:46:49.693Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:46:49.696Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:46:49.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:46:49.697Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:46:49.697Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:47:02.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:47:02.427Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:47:02.482Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.536Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:02.537Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:02.538Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:02.538Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:02.548Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:02.548Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.552Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.553Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:02.553Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:02.553Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:02.553Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.556Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.557Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:02.557Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:02.557Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.563Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.564Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:47:02.564Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:47:02.564Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.566Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.567Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:02.567Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:02.567Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:02.567Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.569Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:47:02.569Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:47:02.569Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:02.572Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:02.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:47:02.572Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:47:02.572Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:47:25.592Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:47:25.593Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:47:25.649Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.703Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:25.704Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:25.705Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:25.705Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.714Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.715Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:25.715Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:25.715Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.720Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.720Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:25.720Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:25.720Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:25.720Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.726Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.727Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:47:25.727Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:25.727Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.732Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.732Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:47:25.732Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:47:25.732Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.735Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.735Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:47:25.735Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:47:25.735Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:47:25.735Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.738Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:47:25.738Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:47:25.738Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:47:25.741Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:47:25.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:47:25.741Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:47:25.741Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:53:05.955Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:53:05.956Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:53:06.014Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:53:06.068Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:53:06.069Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:53:06.069Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:53:06.070Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:53:06.070Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:53:06.079Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:53:06.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:53:06.080Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:53:06.080Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:53:06.087Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:53:06.087Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:53:06.087Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:53:06.087Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:53:06.091Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:53:06.091Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:53:06.091Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:53:06.093Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:53:06.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:53:06.094Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:53:06.094Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:54:00.281Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:54:00.282Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:54:00.339Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.393Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:00.395Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:54:00.395Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:54:00.396Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:54:00.396Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.406Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:00.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:54:00.406Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:54:00.407Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:00.414Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:54:00.415Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T23:54:00.415Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:00.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:54:00.419Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:54:00.419Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:54:00.420Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.422Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T23:54:00.423Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T23:54:00.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:00.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:00.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:54:00.426Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T23:54:00.427Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:54:27.544Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:27.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:54:27.544Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:54:27.545Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:54:27.595Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:27.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:27.653Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:54:27.653Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:54:27.653Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:54:27.653Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:54:27.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:54:27.663Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:54:27.663Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:54:27.663Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:55:02.349Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:02.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:02.351Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:55:02.407Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:02.461Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:02.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:02.462Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:02.463Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:55:02.463Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:02.473Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:02.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:02.474Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:02.474Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:55:18.311Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:18.311Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:18.311Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:18.312Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:55:18.370Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:18.424Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:18.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:18.426Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:18.426Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:55:18.426Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:18.436Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:18.436Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:18.437Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:18.437Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:55:27.973Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:27.974Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:55:28.031Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:28.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:28.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:28.086Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:28.086Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:55:28.086Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:28.096Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:28.096Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:28.096Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:28.096Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:55:43.483Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:55:43.484Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:55:43.535Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:43.589Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:43.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:55:43.590Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:43.591Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:55:43.591Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:55:43.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:55:43.601Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:55:43.601Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:55:43.601Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:56:01.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:01.778Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:56:01.830Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:01.884Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:01.885Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:56:01.885Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:01.885Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:56:01.885Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:01.895Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:01.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:56:01.895Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:01.895Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:56:51.113Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:56:51.114Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:56:51.164Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:51.219Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:51.220Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:56:51.220Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:51.221Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:56:51.221Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:56:51.229Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:56:51.230Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:56:51.230Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:56:51.230Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T23:57:06.330Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-07T23:57:06.331Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T23:57:06.383Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:57:06.437Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:57:06.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T23:57:06.438Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:57:06.439Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T23:57:06.439Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T23:57:06.449Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T23:57:06.450Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T23:57:06.450Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T23:57:06.450Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:04:00.440Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:04:00.441Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:04:00.493Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:00.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:00.550Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:00.550Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:00.550Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:04:00.551Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:00.560Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:00.561Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:00.561Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:00.561Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:04:09.588Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:09.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:04:09.589Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:04:09.646Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:09.702Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:09.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:09.703Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:09.704Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:04:09.704Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:09.714Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:09.715Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:09.715Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:09.715Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:04:24.873Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:04:24.874Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:04:24.932Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:24.987Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:24.988Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:24.988Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:24.988Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:04:24.989Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:24.999Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:24.999Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:24.999Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:24.999Z"}
[{"name":"name","description":"description"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:25.007Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:25.008Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:04:25.008Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:04:25.008Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:25.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:25.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:25.013Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:04:25.014Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:04:25.014Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:25.016Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:04:25.016Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:04:25.016Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:04:25.019Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:04:25.019Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:04:25.019Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:04:25.019Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:04:57.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:04:57.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:04:57.770Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:06:11.508Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:06:11.509Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:06:11.566Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:06:11.620Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:06:11.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:11.622Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:06:11.622Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:06:11.622Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:06:11.634Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:06:11.635Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:06:11.635Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:06:11.636Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:06:27.061Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:27.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:06:27.063Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:06:27.116Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:06:27.171Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:06:27.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:27.173Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:06:27.173Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:06:27.173Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:06:50.525Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:06:50.526Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:06:50.583Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:06:50.639Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:06:50.640Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:06:50.640Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:06:50.640Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:06:50.640Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:09:33.936Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:09:33.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:09:33.938Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:09:33.998Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:09:34.054Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:09:34.056Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:09:34.056Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:09:34.057Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:09:34.057Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:10:22.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:22.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:10:22.484Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:10:22.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:22.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:10:22.485Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:10:22.485Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:22.485Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:10:22.485Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:10:22.543Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:10:22.598Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:10:22.599Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:10:22.599Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:10:22.600Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:10:22.600Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:10:35.238Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:10:35.239Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:10:35.291Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:10:35.348Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:10:35.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:10:35.349Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:10:35.350Z"}
{"name":"name","description":"description","id":"test","level":"info","message":"","timestamp":"2017-12-08T00:10:35.350Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:11:55.050Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:11:55.051Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:11:55.104Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:11:55.121Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:11:55.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:11:55.122Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:11:55.123Z"}
{"name":"name","description":"description","id":"test","level":"info","message":"","timestamp":"2017-12-08T00:11:55.123Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:12:18.186Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:12:18.189Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:12:18.189Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:12:18.189Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:12:18.189Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:12:18.189Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:12:18.190Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:12:18.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:12:18.190Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:12:18.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:12:18.257Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:12:18.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:12:18.258Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:12:18.259Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-08T00:12:18.259Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:13:07.894Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:13:07.895Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:13:07.954Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:13:08.011Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:13:08.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:13:08.012Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:13:08.013Z"}
{"name":"name","description":"description","testId":"91817dd0-dbac-11e7-8ae2-dfef18cab2b3","level":"info","message":"","timestamp":"2017-12-08T00:13:08.013Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:14:18.009Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:14:18.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:14:18.009Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:14:18.010Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:14:18.067Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.121Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:14:18.124Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:14:18.125Z"}
{"name":"name","description":"description","testId":"bb4b94c0-dbac-11e7-a808-1bfb59808360","level":"info","message":"","timestamp":"2017-12-08T00:14:18.125Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.134Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:14:18.134Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:14:18.135Z"}
[{"name":"name","description":"description","testId":"bb4b94c0-dbac-11e7-a808-1bfb59808360"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.140Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.141Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:14:18.141Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:14:18.141Z"}
{"name":"name","description":"description","testId":"bb4e2cd0-dbac-11e7-a808-1bfb59808360","level":"info","message":"","timestamp":"2017-12-08T00:14:18.141Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.144Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:14:18.144Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:14:18.144Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.147Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:14:18.147Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:14:18.147Z"}
{"name":"name","description":"description","testId":"bb4f1730-dbac-11e7-a808-1bfb59808360","level":"info","message":"","timestamp":"2017-12-08T00:14:18.147Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.149Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:14:18.150Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:14:18.150Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:14:18.153Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:14:18.153Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:14:18.153Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:14:18.154Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:15:40.205Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:15:40.206Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:15:40.262Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.315Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.316Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:15:40.316Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:15:40.317Z"}
{"name":"name","description":"description","testId":"ec493cd0-dbac-11e7-925f-db39104473eb","level":"info","message":"","timestamp":"2017-12-08T00:15:40.317Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.327Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:15:40.327Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:15:40.328Z"}
[{"name":"name","description":"description","testId":"ec493cd0-dbac-11e7-925f-db39104473eb"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.333Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.334Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:15:40.334Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:15:40.334Z"}
{"name":"name","description":"description","testId":"ec4bd4e0-dbac-11e7-925f-db39104473eb","level":"info","message":"","timestamp":"2017-12-08T00:15:40.334Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.338Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:15:40.340Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:15:40.340Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.344Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.344Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:15:40.345Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:15:40.345Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.347Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:15:40.348Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:15:40.348Z"}
{"name":"name","description":"description","testId":"ec4df7c0-dbac-11e7-925f-db39104473eb","level":"info","message":"","timestamp":"2017-12-08T00:15:40.348Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.350Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:15:40.351Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:15:40.351Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:15:40.353Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:15:40.353Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:15:40.353Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:15:40.354Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:16:43.169Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:43.169Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:16:43.169Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:16:43.170Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:16:43.225Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:43.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:43.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:43.281Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:43.281Z"}
{"name":"name","description":"description","testId":"11d0c810-dbad-11e7-8271-6bc822080b9d","level":"info","message":"","timestamp":"2017-12-08T00:16:43.281Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:43.291Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:43.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:16:43.292Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:43.292Z"}
[{"name":"name","description":"description","testId":"11d0c810-dbad-11e7-8271-6bc822080b9d"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:16:50.710Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:16:50.711Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:16:50.763Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.780Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.781Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:50.781Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:50.782Z"}
{"name":"name","description":"description","testId":"164930d0-dbad-11e7-a856-174b3c8aeaef","level":"info","message":"","timestamp":"2017-12-08T00:16:50.782Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.791Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:16:50.791Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:50.791Z"}
[{"name":"name","description":"description","testId":"164930d0-dbad-11e7-a856-174b3c8aeaef"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.797Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:50.797Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:50.797Z"}
{"name":"name","description":"description","testId":"164ba1d0-dbad-11e7-a856-174b3c8aeaef","level":"info","message":"","timestamp":"2017-12-08T00:16:50.797Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.801Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.801Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:16:50.801Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:50.802Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.807Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.807Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:16:50.808Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:16:50.808Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.810Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:16:50.810Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:16:50.811Z"}
{"name":"name","description":"description","testId":"164dc4b0-dbad-11e7-a856-174b3c8aeaef","level":"info","message":"","timestamp":"2017-12-08T00:16:50.811Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.813Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:16:50.813Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:16:50.813Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:16:50.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:16:50.815Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:16:50.816Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:16:50.816Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:17:03.763Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:17:03.764Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:17:03.820Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:17:03.873Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:17:03.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:17:03.875Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:17:03.876Z"}
{"name":"name","description":"description","testId":"1e175440-dbad-11e7-aafd-fdc4ea000d59","level":"info","message":"","timestamp":"2017-12-08T00:17:03.876Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:17:03.889Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:17:03.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:17:03.890Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:17:03.890Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:17:59.568Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:59.568Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:17:59.569Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:17:59.620Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:17:59.678Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:17:59.679Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:17:59.679Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:17:59.680Z"}
{"name":"name","description":"description","testId":"3f5a30f0-dbad-11e7-b55c-5f4b4b4ea858","level":"info","message":"","timestamp":"2017-12-08T00:17:59.680Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:17:59.691Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:17:59.692Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:17:59.692Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:17:59.692Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:19:40.763Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:19:40.764Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:19:40.814Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:19:40.870Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:19:40.871Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:19:40.872Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:19:40.872Z"}
{"name":"name","description":"description","testId":"7bab0480-dbad-11e7-9158-9b07bc03de9e","level":"info","message":"","timestamp":"2017-12-08T00:19:40.872Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:19:40.884Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:19:40.885Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:19:40.885Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:19:40.885Z"}
{"name":"name","description":"description","testId":"7bab0480-dbad-11e7-9158-9b07bc03de9e","level":"info","message":"","timestamp":"2017-12-08T00:19:40.885Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:20:08.418Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:20:08.418Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:20:08.418Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:20:08.419Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:20:08.471Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.527Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.528Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:20:08.528Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:20:08.529Z"}
{"name":"name","description":"description","testId":"8c272410-dbad-11e7-b162-19d306fe6071","level":"info","message":"","timestamp":"2017-12-08T00:20:08.529Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.538Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:20:08.539Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:20:08.539Z"}
[{"name":"name","description":"description","testId":"8c272410-dbad-11e7-b162-19d306fe6071"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.545Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:20:08.545Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:20:08.545Z"}
{"name":"name","description":"description","testId":"8c299510-dbad-11e7-b162-19d306fe6071","level":"info","message":"","timestamp":"2017-12-08T00:20:08.545Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.548Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.549Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:20:08.549Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:20:08.549Z"}
{"name":"name","description":"description","testId":"8c299510-dbad-11e7-b162-19d306fe6071","level":"info","message":"","timestamp":"2017-12-08T00:20:08.549Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.552Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.552Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:20:08.552Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:20:08.552Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.555Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.555Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:20:08.555Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:20:08.555Z"}
{"name":"name","description":"description","testId":"8c2b1bb0-dbad-11e7-b162-19d306fe6071","level":"info","message":"","timestamp":"2017-12-08T00:20:08.555Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.559Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:20:08.560Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:20:08.560Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:20:08.563Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:20:08.564Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:20:08.564Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:20:08.564Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:22:30.257Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:30.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:30.258Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:22:30.258Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:30.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:30.258Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:22:30.259Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:30.259Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:30.259Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:22:30.316Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.370Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.372Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:30.372Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.372Z"}
{"name":"name","description":"description","testId":"e0b2aa40-dbad-11e7-be99-2b65cf9606c2","level":"info","message":"","timestamp":"2017-12-08T00:22:30.372Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.382Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.383Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:30.383Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.383Z"}
[{"name":"name","description":"description","testId":"e0b2aa40-dbad-11e7-be99-2b65cf9606c2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:30.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.389Z"}
{"name":"name","description":"description","testId":"e0b54250-dbad-11e7-be99-2b65cf9606c2","level":"info","message":"","timestamp":"2017-12-08T00:22:30.389Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.393Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.394Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:30.394Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.395Z"}
{"name":"name","description":"description","testId":"e0b54250-dbad-11e7-be99-2b65cf9606c2","level":"info","message":"","timestamp":"2017-12-08T00:22:30.395Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.397Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:22:30.398Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:22:30.398Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.400Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.400Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:30.400Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.400Z"}
{"name":"name","description":"description","testId":"e0b6f000-dbad-11e7-be99-2b65cf9606c2","level":"info","message":"","timestamp":"2017-12-08T00:22:30.401Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.403Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:22:30.403Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:22:30.403Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:30.406Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:30.406Z"}
{"name":"name","description":"description","testId":"e0b7da60-dbad-11e7-be99-2b65cf9606c2","level":"info","message":"","timestamp":"2017-12-08T00:22:30.406Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.408Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:30.408Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:22:30.408Z"}
[{"name":"name","description":"description","testId":"e0b7da60-dbad-11e7-be99-2b65cf9606c2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:30.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:30.411Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:30.411Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:22:30.411Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:22:45.634Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:45.635Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:45.635Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:22:45.635Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:45.635Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:45.635Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:22:45.636Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:22:45.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:45.636Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:22:45.693Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.748Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.749Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:45.749Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.750Z"}
{"name":"name","description":"description","testId":"e9dd0250-dbad-11e7-8d0e-590a4076be9b","level":"info","message":"","timestamp":"2017-12-08T00:22:45.750Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.760Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.760Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:45.760Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.760Z"}
[{"name":"name","description":"description","testId":"e9dd0250-dbad-11e7-8d0e-590a4076be9b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.766Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.766Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:45.766Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.766Z"}
{"name":"name","description":"description","testId":"e9df9a60-dbad-11e7-8d0e-590a4076be9b","level":"info","message":"","timestamp":"2017-12-08T00:22:45.766Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.770Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.771Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:22:45.771Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.772Z"}
{"name":"name","description":"description","testId":"e9df9a60-dbad-11e7-8d0e-590a4076be9b","level":"info","message":"","timestamp":"2017-12-08T00:22:45.772Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.775Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.775Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:22:45.775Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:22:45.775Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.778Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.778Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:45.778Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.778Z"}
{"name":"name","description":"description","testId":"e9e16f20-dbad-11e7-8d0e-590a4076be9b","level":"info","message":"","timestamp":"2017-12-08T00:22:45.778Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.780Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:22:45.780Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:22:45.781Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.783Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:22:45.783Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:22:45.783Z"}
{"name":"name","description":"description","testId":"e9e23270-dbad-11e7-8d0e-590a4076be9b","level":"info","message":"","timestamp":"2017-12-08T00:22:45.783Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.785Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:45.785Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:22:45.786Z"}
[{"name":"name","description":"description","testId":"e9e23270-dbad-11e7-8d0e-590a4076be9b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:22:45.790Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:22:45.790Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:22:45.790Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:22:45.790Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:23:40.888Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:23:40.889Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:23:40.940Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:40.994Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:40.996Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:23:40.996Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:23:40.996Z"}
{"name":"name","description":"description","testId":"0acb0840-dbae-11e7-9c02-2107c1c85db7","level":"info","message":"","timestamp":"2017-12-08T00:23:40.996Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.007Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:23:41.008Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:23:41.008Z"}
[{"name":"name","description":"description","testId":"0acb0840-dbae-11e7-9c02-2107c1c85db7"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.012Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:23:41.012Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:23:41.013Z"}
{"name":"name","description":"description","testId":"0acd7940-dbae-11e7-9c02-2107c1c85db7","level":"info","message":"","timestamp":"2017-12-08T00:23:41.013Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:23:41.017Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:23:41.017Z"}
{"name":"name","description":"description","testId":"0acd7940-dbae-11e7-9c02-2107c1c85db7","level":"info","message":"","timestamp":"2017-12-08T00:23:41.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.021Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.022Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:23:41.022Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:23:41.022Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.025Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:23:41.025Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:23:41.025Z"}
{"name":"name","description":"description","testId":"0acf7510-dbae-11e7-9c02-2107c1c85db7","level":"info","message":"","timestamp":"2017-12-08T00:23:41.025Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.028Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:23:41.028Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:23:41.028Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:23:41.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:23:41.030Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:23:41.030Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:23:41.031Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:24:21.309Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:21.310Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:24:21.361Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:21.415Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.416Z"}
{"name":"name","description":"description","testId":"22e27b70-dbae-11e7-aacf-f7af3eeca979","level":"info","message":"","timestamp":"2017-12-08T00:24:21.416Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:21.426Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.427Z"}
[{"name":"name","description":"description","testId":"22e27b70-dbae-11e7-aacf-f7af3eeca979"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.430Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:21.431Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.431Z"}
{"name":"name","description":"description","testId":"22e4ec70-dbae-11e7-aacf-f7af3eeca979","level":"info","message":"","timestamp":"2017-12-08T00:24:21.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.434Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.435Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:21.435Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.435Z"}
{"name":"name","description":"description","testId":"22e4ec70-dbae-11e7-aacf-f7af3eeca979","level":"info","message":"","timestamp":"2017-12-08T00:24:21.435Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.439Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.439Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:24:21.439Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:24:21.440Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:21.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.442Z"}
{"name":"name","description":"description","testId":"22e69a20-dbae-11e7-aacf-f7af3eeca979","level":"info","message":"","timestamp":"2017-12-08T00:24:21.442Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.445Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:24:21.445Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:24:21.445Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.447Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:21.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:21.447Z"}
{"name":"name","description":"description","testId":"22e75d70-dbae-11e7-aacf-f7af3eeca979","level":"info","message":"","timestamp":"2017-12-08T00:24:21.447Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.451Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:21.451Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:24:21.452Z"}
[{"name":"name","description":"description","testId":"22e75d70-dbae-11e7-aacf-f7af3eeca979"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:21.456Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:21.456Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:21.456Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:24:21.457Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:24:38.196Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:38.197Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:24:38.248Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.301Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.303Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:38.303Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.303Z"}
{"name":"name","description":"description","testId":"2cf362f0-dbae-11e7-9453-7558624eb082","level":"info","message":"","timestamp":"2017-12-08T00:24:38.303Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.313Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:38.313Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.314Z"}
[{"name":"name","description":"description","testId":"2cf362f0-dbae-11e7-9453-7558624eb082"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.319Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.319Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:38.319Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.319Z"}
{"name":"name","description":"description","testId":"2cf5d3f0-dbae-11e7-9453-7558624eb082","level":"info","message":"","timestamp":"2017-12-08T00:24:38.319Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.322Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.323Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:24:38.323Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.323Z"}
{"name":"name","description":"description","testId":"2cf5d3f0-dbae-11e7-9453-7558624eb082","level":"info","message":"","timestamp":"2017-12-08T00:24:38.323Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.327Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.327Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:24:38.327Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:24:38.327Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.330Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.330Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:38.330Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.330Z"}
{"name":"name","description":"description","testId":"2cf781a0-dbae-11e7-9453-7558624eb082","level":"info","message":"","timestamp":"2017-12-08T00:24:38.330Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.332Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:24:38.332Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:24:38.332Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.335Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:24:38.335Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:24:38.335Z"}
{"name":"name","description":"description","testId":"2cf844f0-dbae-11e7-9453-7558624eb082","level":"info","message":"","timestamp":"2017-12-08T00:24:38.335Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.339Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:38.339Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:24:38.339Z"}
[{"name":"name","description":"description","testId":"2cf844f0-dbae-11e7-9453-7558624eb082"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:24:38.342Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:24:38.342Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:24:38.342Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:24:38.343Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:25:23.680Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:23.681Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:25:23.737Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.790Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:25:23.791Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.792Z"}
{"name":"name","description":"description","testId":"48104df0-dbae-11e7-b494-7beccb8077f4","level":"info","message":"","timestamp":"2017-12-08T00:25:23.792Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.802Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.803Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:25:23.803Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.803Z"}
[{"name":"name","description":"description","testId":"48104df0-dbae-11e7-b494-7beccb8077f4"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.807Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.807Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:25:23.807Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.807Z"}
{"name":"name","description":"description","testId":"4812bef0-dbae-11e7-b494-7beccb8077f4","level":"info","message":"","timestamp":"2017-12-08T00:25:23.808Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:25:23.813Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.813Z"}
{"name":"name","description":"description","testId":"4812bef0-dbae-11e7-b494-7beccb8077f4","level":"info","message":"","timestamp":"2017-12-08T00:25:23.813Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.816Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.816Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:25:23.816Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:25:23.816Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.819Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:25:23.819Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.820Z"}
{"name":"name","description":"description","testId":"4814bac0-dbae-11e7-b494-7beccb8077f4","level":"info","message":"","timestamp":"2017-12-08T00:25:23.820Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.822Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:25:23.822Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:25:23.822Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.825Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:25:23.825Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:25:23.825Z"}
{"name":"name","description":"description","testId":"48157e10-dbae-11e7-b494-7beccb8077f4","level":"info","message":"","timestamp":"2017-12-08T00:25:23.825Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.829Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.829Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:23.829Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:25:23.830Z"}
[{"name":"name","description":"description","testId":"48157e10-dbae-11e7-b494-7beccb8077f4"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:25:23.832Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:25:23.832Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:25:23.832Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:25:23.832Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:57:24.934Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:24.935Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:57:25.010Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.065Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.066Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:25.066Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.067Z"}
{"name":"name","description":"description","testId":"c13b9aa0-dbb2-11e7-b0d5-dbef69fa32df","level":"info","message":"","timestamp":"2017-12-08T00:57:25.067Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.076Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:25.077Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.077Z"}
[{"name":"name","description":"description","testId":"c13b9aa0-dbb2-11e7-b0d5-dbef69fa32df"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.082Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.082Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:25.083Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.083Z"}
{"name":"name","description":"description","testId":"c13e32b0-dbb2-11e7-b0d5-dbef69fa32df","level":"info","message":"","timestamp":"2017-12-08T00:57:25.083Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.086Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.087Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:25.087Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.087Z"}
{"name":"name","description":"description","testId":"c13e32b0-dbb2-11e7-b0d5-dbef69fa32df","level":"info","message":"","timestamp":"2017-12-08T00:57:25.087Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.090Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.090Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:57:25.090Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:57:25.090Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.093Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:25.093Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.093Z"}
{"name":"name","description":"description","testId":"c13fb950-dbb2-11e7-b0d5-dbef69fa32df","level":"info","message":"","timestamp":"2017-12-08T00:57:25.093Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.095Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:57:25.096Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:57:25.096Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.098Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:25.098Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:25.098Z"}
{"name":"name","description":"description","testId":"c1407ca0-dbb2-11e7-b0d5-dbef69fa32df","level":"info","message":"","timestamp":"2017-12-08T00:57:25.098Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.100Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.101Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:25.101Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:57:25.101Z"}
[{"name":"name","description":"description","testId":"c1407ca0-dbb2-11e7-b0d5-dbef69fa32df"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:25.104Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:25.104Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:25.104Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:57:25.105Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T00:57:37.632Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:37.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:37.632Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:37.633Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T00:57:37.690Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.744Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:37.746Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.746Z"}
{"name":"name","description":"description","testId":"c8ca6b20-dbb2-11e7-b99b-85d0a02a6c55","level":"info","message":"","timestamp":"2017-12-08T00:57:37.746Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.756Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.757Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:37.757Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.757Z"}
[{"name":"name","description":"description","testId":"c8ca6b20-dbb2-11e7-b99b-85d0a02a6c55"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.762Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.762Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:37.762Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.762Z"}
{"name":"name","description":"description","testId":"c8ccdc20-dbb2-11e7-b99b-85d0a02a6c55","level":"info","message":"","timestamp":"2017-12-08T00:57:37.762Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.765Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.766Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T00:57:37.766Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.767Z"}
{"name":"name","description":"description","testId":"c8ccdc20-dbb2-11e7-b99b-85d0a02a6c55","level":"info","message":"","timestamp":"2017-12-08T00:57:37.767Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.770Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.770Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:57:37.771Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T00:57:37.771Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.773Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.773Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:37.773Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.773Z"}
{"name":"name","description":"description","testId":"c8ce89d0-dbb2-11e7-b99b-85d0a02a6c55","level":"info","message":"","timestamp":"2017-12-08T00:57:37.774Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.776Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T00:57:37.776Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T00:57:37.776Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.778Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T00:57:37.779Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T00:57:37.779Z"}
{"name":"name","description":"description","testId":"c8cf7430-dbb2-11e7-b99b-85d0a02a6c55","level":"info","message":"","timestamp":"2017-12-08T00:57:37.779Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.781Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.781Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:37.781Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T00:57:37.781Z"}
[{"name":"name","description":"description","testId":"c8cf7430-dbb2-11e7-b99b-85d0a02a6c55"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T00:57:37.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T00:57:37.784Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T00:57:37.784Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T00:57:37.784Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:03:08.351Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:03:08.352Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:03:08.409Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.463Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:03:08.464Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.465Z"}
{"name":"name","description":"description","testId":"8dea2210-dbb3-11e7-923b-15b35def41f4","level":"info","message":"","timestamp":"2017-12-08T01:03:08.465Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.475Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.476Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:03:08.476Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.476Z"}
[{"name":"name","description":"description","testId":"8dea2210-dbb3-11e7-923b-15b35def41f4"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.480Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:03:08.481Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.481Z"}
{"name":"name","description":"description","testId":"8dec9310-dbb3-11e7-923b-15b35def41f4","level":"info","message":"","timestamp":"2017-12-08T01:03:08.481Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.484Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.485Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:03:08.485Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.485Z"}
{"name":"name","description":"description","testId":"8dec9310-dbb3-11e7-923b-15b35def41f4","level":"info","message":"","timestamp":"2017-12-08T01:03:08.485Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.489Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:08.489Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:03:08.489Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.492Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.492Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:03:08.492Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.492Z"}
{"name":"name","description":"description","testId":"8dee40c0-dbb3-11e7-923b-15b35def41f4","level":"info","message":"","timestamp":"2017-12-08T01:03:08.492Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.494Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:03:08.495Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:03:08.495Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.497Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:03:08.497Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:03:08.497Z"}
{"name":"name","description":"description","testId":"8def0410-dbb3-11e7-923b-15b35def41f4","level":"info","message":"","timestamp":"2017-12-08T01:03:08.497Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.499Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.500Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:03:08.500Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:03:08.500Z"}
[{"name":"name","description":"description","testId":"8def0410-dbb3-11e7-923b-15b35def41f4"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:03:08.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:03:08.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:03:08.503Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:03:08.503Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:04:06.590Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:04:06.591Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:04:06.648Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.702Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.703Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.704Z"}
{"name":"name","description":"description","testId":"b0a08bf0-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.704Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.713Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.713Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.713Z"}
{"name":"name","description":"description","testId":"b0a21290-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.713Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.716Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:04:06.716Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.717Z"}
[{"name":"name","description":"description","testId":"b0a08bf0-dbb3-11e7-ba56-8dd63ae8f804"},{"name":"name","description":"description","testId":"b0a21290-dbb3-11e7-ba56-8dd63ae8f804"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.720Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.720Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.720Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.721Z"}
{"name":"name","description":"description","testId":"b0a32400-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.721Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.724Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.724Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:04:06.724Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.725Z"}
{"name":"name","description":"description","testId":"b0a32400-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.725Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.728Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.728Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:06.728Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:04:06.728Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.731Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.731Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.731Z"}
{"name":"name","description":"description","testId":"b0a4d1b0-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.731Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.733Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:04:06.733Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:04:06.733Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.736Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.736Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:04:06.736Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:04:06.736Z"}
{"name":"name","description":"description","testId":"b0a59500-dbb3-11e7-ba56-8dd63ae8f804","level":"info","message":"","timestamp":"2017-12-08T01:04:06.736Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.738Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:04:06.738Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:04:06.739Z"}
[{"name":"name","description":"description","testId":"b0a59500-dbb3-11e7-ba56-8dd63ae8f804"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:04:06.741Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:04:06.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:04:06.741Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:04:06.741Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:13:49.589Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:13:49.590Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:13:49.591Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:13:49.645Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.700Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.701Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.701Z"}
{"name":"name","description":"description","testId":"0c1efb50-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.702Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.712Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.713Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.713Z"}
{"name":"name","description":"description","testId":"0c20d010-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.713Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.716Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:13:49.716Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.716Z"}
[{"name":"name","description":"description","testId":"0c1efb50-dbb5-11e7-ae41-e5b1b0c275de"},{"name":"name","description":"description","testId":"0c20d010-dbb5-11e7-ae41-e5b1b0c275de"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.721Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.721Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.721Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.721Z"}
{"name":"name","description":"description","testId":"0c220890-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.721Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.725Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.726Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:13:49.726Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.726Z"}
{"name":"name","description":"description","testId":"0c220890-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.726Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.730Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.731Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:13:49.731Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:13:49.731Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.733Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.734Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.734Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.734Z"}
{"name":"name","description":"description","testId":"0c240460-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.734Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.736Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:13:49.736Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:13:49.736Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.739Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.739Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:13:49.739Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:13:49.739Z"}
{"name":"name","description":"description","testId":"0c24c7b0-dbb5-11e7-ae41-e5b1b0c275de","level":"info","message":"","timestamp":"2017-12-08T01:13:49.739Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.741Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:13:49.741Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:13:49.742Z"}
[{"name":"name","description":"description","testId":"0c24c7b0-dbb5-11e7-ae41-e5b1b0c275de"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:13:49.744Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:13:49.745Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:13:49.745Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:13:49.745Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:14:34.825Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:34.826Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:14:34.884Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.938Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.940Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.941Z"}
{"name":"name","description":"description","testId":"2715e7c0-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.941Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.950Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.950Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.951Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.951Z"}
{"name":"name","description":"description","testId":"27179570-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.951Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.953Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.953Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:34.954Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.954Z"}
[{"name":"name","description":"description","testId":"2715e7c0-dbb5-11e7-885f-65b85ca64cbe"},{"name":"name","description":"description","testId":"27179570-dbb5-11e7-885f-65b85ca64cbe"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.958Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.958Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.958Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.958Z"}
{"name":"name","description":"description","testId":"2718a6e0-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.958Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.960Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.961Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.961Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.961Z"}
{"name":"name","description":"description","testId":"27191c10-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.961Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.964Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:34.965Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.965Z"}
{"name":"name","description":"description","testId":"2718a6e0-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.965Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.970Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.970Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:14:34.970Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:14:34.970Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.973Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.973Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.973Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.973Z"}
{"name":"name","description":"description","testId":"271af0d0-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.973Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.975Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:14:34.975Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:14:34.976Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.978Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.978Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:34.978Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:34.978Z"}
{"name":"name","description":"description","testId":"271bb420-dbb5-11e7-885f-65b85ca64cbe","level":"info","message":"","timestamp":"2017-12-08T01:14:34.978Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.980Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.980Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:34.980Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:14:34.981Z"}
[{"name":"name","description":"description","testId":"271bb420-dbb5-11e7-885f-65b85ca64cbe"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:34.983Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:34.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:34.984Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:14:34.984Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:14:44.882Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:44.883Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:14:44.940Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:44.995Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:44.996Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:44.996Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:44.997Z"}
{"name":"name","description":"description","testId":"2d145440-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:44.997Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.008Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:45.008Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.008Z"}
{"name":"name","description":"description","testId":"2d162900-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.008Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.012Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.012Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:45.012Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.012Z"}
[{"name":"name","description":"description","testId":"2d145440-dbb5-11e7-a518-adf5f152c17a"},{"name":"name","description":"description","testId":"2d162900-dbb5-11e7-a518-adf5f152c17a"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.017Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:45.017Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.017Z"}
{"name":"name","description":"description","testId":"2d178890-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.017Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.021Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:45.021Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.021Z"}
{"name":"name","description":"description","testId":"2d1824d0-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.021Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.024Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:14:45.025Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.025Z"}
{"name":"name","description":"description","testId":"2d178890-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.025Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.030Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:14:45.030Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:14:45.031Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.033Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:45.034Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.034Z"}
{"name":"name","description":"description","testId":"2d1a20a0-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.034Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.036Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:14:45.036Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:14:45.036Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.039Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.039Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:14:45.039Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:14:45.039Z"}
{"name":"name","description":"description","testId":"2d1ae3f0-dbb5-11e7-a518-adf5f152c17a","level":"info","message":"","timestamp":"2017-12-08T01:14:45.039Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.042Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.042Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:45.042Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:14:45.043Z"}
[{"name":"name","description":"description","testId":"2d1ae3f0-dbb5-11e7-a518-adf5f152c17a"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:14:45.045Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:14:45.046Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:14:45.046Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:14:45.046Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:15:58.284Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:15:58.285Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:15:58.338Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.391Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.392Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.393Z"}
{"name":"name","description":"description","testId":"58d3d290-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.393Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.403Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.404Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.404Z"}
{"name":"name","description":"description","testId":"58d58040-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.404Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.408Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.408Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:15:58.408Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.408Z"}
[{"name":"name","description":"description","testId":"58d3d290-dbb5-11e7-a327-b3bd031a0889"},{"name":"name","description":"description","testId":"58d58040-dbb5-11e7-a327-b3bd031a0889"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.414Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.414Z"}
{"name":"name","description":"description","testId":"58d706e0-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.414Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.416Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.417Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.417Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.417Z"}
{"name":"name","description":"description","testId":"58d77c10-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.417Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:15:58.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.420Z"}
{"name":"name","description":"description","testId":"58d706e0-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.421Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.425Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.425Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:15:58.425Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:15:58.425Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.427Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.428Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.428Z"}
{"name":"name","description":"description","testId":"58d929c0-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.430Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:15:58.430Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:15:58.430Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.432Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.433Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:15:58.433Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:15:58.433Z"}
{"name":"name","description":"description","testId":"58d9ed10-dbb5-11e7-a327-b3bd031a0889","level":"info","message":"","timestamp":"2017-12-08T01:15:58.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.435Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.435Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:15:58.435Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:15:58.436Z"}
[{"name":"name","description":"description","testId":"58d9ed10-dbb5-11e7-a327-b3bd031a0889"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:15:58.438Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:15:58.438Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:15:58.438Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:15:58.439Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:16:39.520Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:39.521Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:16:39.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.587Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.588Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.589Z"}
{"name":"name","description":"description","testId":"7161d550-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.589Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.598Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.598Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.599Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.599Z"}
{"name":"name","description":"description","testId":"71635bf0-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.599Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:39.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.602Z"}
[{"name":"name","description":"description","testId":"7161d550-dbb5-11e7-8f3a-536d2bf7cba0"},{"name":"name","description":"description","testId":"71635bf0-dbb5-11e7-8f3a-536d2bf7cba0"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.606Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.606Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.606Z"}
{"name":"name","description":"description","testId":"71646d60-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.606Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.609Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.610Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:39.610Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.610Z"}
{"name":"name","description":"description","testId":"71646d60-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.610Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.616Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.616Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:16:39.616Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:16:39.616Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.618Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.619Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.619Z"}
{"name":"name","description":"description","testId":"71666930-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.619Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.621Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:16:39.621Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:16:39.621Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.623Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.624Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:39.624Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:39.624Z"}
{"name":"name","description":"description","testId":"71672c80-dbb5-11e7-8f3a-536d2bf7cba0","level":"info","message":"","timestamp":"2017-12-08T01:16:39.624Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.626Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.626Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:39.626Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:16:39.626Z"}
[{"name":"name","description":"description","testId":"71672c80-dbb5-11e7-8f3a-536d2bf7cba0"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:39.629Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:39.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:39.629Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:16:39.629Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:16:52.444Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:52.445Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:16:52.496Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.552Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.553Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.553Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.553Z"}
{"name":"name","description":"description","testId":"791bfb90-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.553Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.563Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.564Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.564Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.564Z"}
{"name":"name","description":"description","testId":"791da940-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.564Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.567Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.567Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:52.567Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.567Z"}
[{"name":"name","description":"description","testId":"791bfb90-dbb5-11e7-9acc-6d65207853b3"},{"name":"name","description":"description","testId":"791da940-dbb5-11e7-9acc-6d65207853b3"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.572Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.572Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.572Z"}
{"name":"name","description":"description","testId":"791ee1c0-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.575Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:16:52.576Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.576Z"}
{"name":"name","description":"description","testId":"791ee1c0-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.576Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.580Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.580Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:16:52.581Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:16:52.581Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.583Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.584Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.584Z"}
{"name":"name","description":"description","testId":"7920b680-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.584Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.586Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:16:52.589Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:16:52.589Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.591Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.592Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:16:52.592Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:16:52.592Z"}
{"name":"name","description":"description","testId":"7921ef00-dbb5-11e7-9acc-6d65207853b3","level":"info","message":"","timestamp":"2017-12-08T01:16:52.592Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.594Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:52.594Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:16:52.594Z"}
[{"name":"name","description":"description","testId":"7921ef00-dbb5-11e7-9acc-6d65207853b3"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:16:52.597Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:16:52.598Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:16:52.598Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:16:52.598Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:17:13.092Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:17:13.093Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:17:13.144Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.198Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.200Z"}
{"name":"name","description":"description","testId":"856a7700-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.200Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.209Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.210Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.210Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.210Z"}
{"name":"name","description":"description","testId":"856bfda0-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.213Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.213Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:17:13.213Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.213Z"}
[{"name":"name","description":"description","testId":"856a7700-dbb5-11e7-bfb9-537ef63dffa5"},{"name":"name","description":"description","testId":"856bfda0-dbb5-11e7-bfb9-537ef63dffa5"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.217Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.217Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.217Z"}
{"name":"name","description":"description","testId":"856d0f10-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.217Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.220Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.221Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:17:13.221Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.221Z"}
{"name":"name","description":"description","testId":"856d0f10-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.221Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.225Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.225Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:17:13.225Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:17:13.226Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.228Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.228Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.228Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.228Z"}
{"name":"name","description":"description","testId":"856ebcc0-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.228Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.230Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:17:13.231Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:17:13.231Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:17:13.233Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:17:13.233Z"}
{"name":"name","description":"description","testId":"856f8010-dbb5-11e7-bfb9-537ef63dffa5","level":"info","message":"","timestamp":"2017-12-08T01:17:13.233Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.235Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:17:13.236Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:17:13.236Z"}
[{"name":"name","description":"description","testId":"856f8010-dbb5-11e7-bfb9-537ef63dffa5"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:17:13.239Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:17:13.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:17:13.239Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:17:13.239Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:21:18.537Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:21:18.538Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:21:18.593Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.647Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.649Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.649Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.650Z"}
{"name":"name","description":"description","testId":"17b70290-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.650Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.660Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.660Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.661Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.661Z"}
{"name":"name","description":"description","testId":"17b8d750-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.661Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.664Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.665Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:21:18.665Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.665Z"}
[{"name":"name","description":"description","testId":"17b70290-dbb6-11e7-bd8f-a5d9bbcd1b27"},{"name":"name","description":"description","testId":"17b8d750-dbb6-11e7-bd8f-a5d9bbcd1b27"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.671Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.671Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.671Z"}
{"name":"name","description":"description","testId":"17ba5df0-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.671Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.675Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:21:18.676Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.676Z"}
{"name":"name","description":"description","testId":"17ba5df0-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.676Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.687Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:21:18.687Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:21:18.688Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.691Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.691Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.691Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.691Z"}
{"name":"name","description":"description","testId":"17bd6b30-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.691Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.695Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:21:18.695Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:21:18.695Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.698Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:21:18.698Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:21:18.698Z"}
{"name":"name","description":"description","testId":"17be7ca0-dbb6-11e7-bd8f-a5d9bbcd1b27","level":"info","message":"","timestamp":"2017-12-08T01:21:18.698Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.702Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:21:18.703Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:21:18.703Z"}
[{"name":"name","description":"description","testId":"17be7ca0-dbb6-11e7-bd8f-a5d9bbcd1b27"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:21:18.706Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:21:18.706Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:21:18.706Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:21:18.707Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:29:01.122Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:29:01.123Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:29:01.174Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.227Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.228Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.228Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.229Z"}
{"name":"name","description":"description","testId":"2b6f1dd0-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.229Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.239Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.240Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.240Z"}
{"name":"name","description":"description","testId":"2b70cb80-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:29:01.243Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.243Z"}
[{"name":"name","description":"description","testId":"2b6f1dd0-dbb7-11e7-be21-77aab968524b"},{"name":"name","description":"description","testId":"2b70cb80-dbb7-11e7-be21-77aab968524b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.248Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.248Z"}
{"name":"name","description":"description","testId":"2b720400-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.248Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.252Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.253Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:29:01.253Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.253Z"}
{"name":"name","description":"description","testId":"2b720400-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.253Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.263Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.264Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:29:01.264Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:29:01.264Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.266Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.267Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.267Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.267Z"}
{"name":"name","description":"description","testId":"2b74ea30-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.267Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.269Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:29:01.269Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:29:01.269Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.271Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.271Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.271Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.272Z"}
{"name":"name","description":"description","testId":"2b758670-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.272Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.274Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:29:01.274Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:29:01.275Z"}
[{"name":"name","description":"description","testId":"2b758670-dbb7-11e7-be21-77aab968524b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.277Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.277Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:29:01.277Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:29:01.277Z"}
{"name":"name","description":"description","testId":"2b7670d0-dbb7-11e7-be21-77aab968524b","level":"info","message":"","timestamp":"2017-12-08T01:29:01.277Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.279Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:29:01.279Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:29:01.279Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:29:01.282Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:29:01.283Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:29:01.283Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:29:01.283Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:44:44.376Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:44:44.377Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:44:44.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.448Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.449Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.449Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.450Z"}
{"name":"name","description":"description","testId":"5da33820-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.450Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.460Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.461Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.461Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.462Z"}
{"name":"name","description":"description","testId":"5da4e5d0-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.462Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.465Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.465Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:44:44.465Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.466Z"}
[{"name":"name","description":"description","testId":"5da33820-dbb9-11e7-9c15-950839398ee0"},{"name":"name","description":"description","testId":"5da4e5d0-dbb9-11e7-9c15-950839398ee0"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.471Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.471Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.471Z"}
{"name":"name","description":"description","testId":"5da66c70-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.471Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.475Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.476Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:44:44.476Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.476Z"}
{"name":"name","description":"description","testId":"5da66c70-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.476Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.488Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.488Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:44:44.488Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:44:44.488Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.492Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.492Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.492Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.492Z"}
{"name":"name","description":"description","testId":"5da9a0c0-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.492Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.495Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:44:44.496Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:44:44.496Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.499Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.499Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.499Z"}
{"name":"name","description":"description","testId":"5daab230-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.499Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.502Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:44:44.502Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:44:44.503Z"}
[{"name":"name","description":"description","testId":"5daab230-dbb9-11e7-9c15-950839398ee0"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.506Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.506Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:44:44.506Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:44:44.506Z"}
{"name":"name","description":"description","testId":"5dabc3a0-dbb9-11e7-9c15-950839398ee0","level":"info","message":"","timestamp":"2017-12-08T01:44:44.506Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.509Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.509Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:44:44.509Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:44:44.509Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:44:44.512Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:44:44.512Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:44:44.512Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:44:44.512Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:47:48.804Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:48.804Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:48.805Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:47:48.855Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.910Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.911Z"}
{"name":"name","description":"description","testId":"cb95bbf0-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.911Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.920Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.920Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.921Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.921Z"}
{"name":"name","description":"description","testId":"cb974290-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.921Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.924Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:48.924Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.924Z"}
[{"name":"name","description":"description","testId":"cb95bbf0-dbb9-11e7-8704-3385e7a6178e"},{"name":"name","description":"description","testId":"cb974290-dbb9-11e7-8704-3385e7a6178e"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.929Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.929Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.929Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.929Z"}
{"name":"name","description":"description","testId":"cb987b10-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.929Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.933Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.934Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:48.934Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.934Z"}
{"name":"name","description":"description","testId":"cb987b10-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.934Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.945Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.945Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:47:48.946Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:47:48.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.948Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.949Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.949Z"}
{"name":"name","description":"description","testId":"cb9b8850-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.949Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.951Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:47:48.952Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:47:48.952Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.954Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.954Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.954Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.955Z"}
{"name":"name","description":"description","testId":"cb9c4ba0-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.955Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.957Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.958Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:48.958Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:47:48.958Z"}
[{"name":"name","description":"description","testId":"cb9c4ba0-dbb9-11e7-8704-3385e7a6178e"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.962Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.962Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:48.962Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:48.963Z"}
{"name":"name","description":"description","testId":"cb9d8420-dbb9-11e7-8704-3385e7a6178e","level":"info","message":"","timestamp":"2017-12-08T01:47:48.963Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.966Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.967Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:48.967Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:47:48.967Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:48.969Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:48.969Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:48.969Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:47:48.969Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:47:55.860Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:55.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:55.860Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:55.861Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:47:55.911Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.927Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.928Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.929Z"}
{"name":"name","description":"description","testId":"cfc49890-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.929Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.938Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.938Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.938Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.939Z"}
{"name":"name","description":"description","testId":"cfc61f30-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.939Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.941Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:55.942Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.942Z"}
[{"name":"name","description":"description","testId":"cfc49890-dbb9-11e7-9c0f-ef30445e3e86"},{"name":"name","description":"description","testId":"cfc61f30-dbb9-11e7-9c0f-ef30445e3e86"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.946Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.946Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.946Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.946Z"}
{"name":"name","description":"description","testId":"cfc730a0-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.950Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:47:55.950Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.950Z"}
{"name":"name","description":"description","testId":"cfc730a0-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.950Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.961Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.961Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:47:55.961Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:47:55.961Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.964Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.965Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.965Z"}
{"name":"name","description":"description","testId":"cfca16d0-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.965Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.967Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:47:55.967Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:47:55.967Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.970Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.970Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.970Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.970Z"}
{"name":"name","description":"description","testId":"cfcada20-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.970Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.972Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:55.972Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:47:55.973Z"}
[{"name":"name","description":"description","testId":"cfcada20-dbb9-11e7-9c0f-ef30445e3e86"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.975Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.975Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:47:55.975Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:47:55.975Z"}
{"name":"name","description":"description","testId":"cfcb9d70-dbb9-11e7-9c0f-ef30445e3e86","level":"info","message":"","timestamp":"2017-12-08T01:47:55.975Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.977Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.977Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:55.977Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:47:55.978Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:47:55.979Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:47:55.980Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:47:55.980Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:47:55.980Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:49:55.359Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:49:55.360Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:49:55.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.488Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.490Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.490Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.490Z"}
{"name":"name","description":"description","testId":"17082820-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.491Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.501Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.502Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.502Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.502Z"}
{"name":"name","description":"description","testId":"1709fce0-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.502Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.505Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.505Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:49:55.505Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.505Z"}
[{"name":"name","description":"description","testId":"17082820-dbba-11e7-88d6-511b0ac65a1b"},{"name":"name","description":"description","testId":"1709fce0-dbba-11e7-88d6-511b0ac65a1b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.510Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.510Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.510Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.510Z"}
{"name":"name","description":"description","testId":"170b3560-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.511Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.513Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.515Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:49:55.515Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.515Z"}
{"name":"name","description":"description","testId":"170b3560-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.515Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.518Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.518Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:49:55.518Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:49:55.518Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.521Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.522Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.522Z"}
{"name":"name","description":"description","testId":"170d0a20-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.522Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.525Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:49:55.525Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:49:55.526Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.528Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.529Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.529Z"}
{"name":"name","description":"description","testId":"170e1b90-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.529Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.531Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:49:55.531Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:49:55.531Z"}
[{"name":"name","description":"description","testId":"170e1b90-dbba-11e7-88d6-511b0ac65a1b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.534Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:49:55.535Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:49:55.535Z"}
{"name":"name","description":"description","testId":"170f05f0-dbba-11e7-88d6-511b0ac65a1b","level":"info","message":"","timestamp":"2017-12-08T01:49:55.535Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.537Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:49:55.537Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:49:55.538Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:49:55.540Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:49:55.540Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[47]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:49:55.540Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:49:55.540Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:53:29.776Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:53:29.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:53:29.777Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:53:29.827Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.882Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.884Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.884Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.884Z"}
{"name":"name","description":"description","testId":"96d215c0-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.884Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.895Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.895Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.895Z"}
{"name":"name","description":"description","testId":"96d3c370-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.895Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.898Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.898Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:53:29.898Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.898Z"}
[{"name":"name","description":"description","testId":"96d215c0-dbba-11e7-a256-efe21388ea79"},{"name":"name","description":"description","testId":"96d3c370-dbba-11e7-a256-efe21388ea79"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.903Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.903Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.903Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.903Z"}
{"name":"name","description":"description","testId":"96d4fbf0-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.903Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.907Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.908Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:53:29.908Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.908Z"}
{"name":"name","description":"description","testId":"96d4fbf0-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.908Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.910Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.911Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:53:29.911Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:53:29.911Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.913Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.914Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.914Z"}
{"name":"name","description":"description","testId":"96d6a9a0-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.914Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.916Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:53:29.916Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:53:29.916Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.918Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.919Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.919Z"}
{"name":"name","description":"description","testId":"96d76cf0-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.919Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.921Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:53:29.921Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:53:29.921Z"}
[{"name":"name","description":"description","testId":"96d76cf0-dbba-11e7-a256-efe21388ea79"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.924Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:53:29.924Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:53:29.924Z"}
{"name":"name","description":"description","testId":"96d83040-dbba-11e7-a256-efe21388ea79","level":"info","message":"","timestamp":"2017-12-08T01:53:29.924Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.926Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:53:29.926Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:53:29.926Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:53:29.928Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:53:29.929Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:53:29.929Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:53:29.929Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:54:00.543Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:00.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:00.544Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:54:00.544Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:00.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.544Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:54:00.545Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:00.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:00.545Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:54:00.595Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.649Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.651Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.651Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.651Z"}
{"name":"name","description":"description","testId":"a928c1b0-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.651Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.661Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.661Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.661Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.661Z"}
{"name":"name","description":"description","testId":"a92a4850-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.661Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.664Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:00.664Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.665Z"}
[{"name":"name","description":"description","testId":"a928c1b0-dbba-11e7-9b30-731ffc1a495d"},{"name":"name","description":"description","testId":"a92a4850-dbba-11e7-9b30-731ffc1a495d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.669Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.669Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.669Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.670Z"}
{"name":"name","description":"description","testId":"a92ba7e0-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.670Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.674Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.675Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:00.675Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.675Z"}
{"name":"name","description":"description","testId":"a92ba7e0-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.675Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.678Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:00.679Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:54:00.679Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.682Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.683Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.683Z"}
{"name":"name","description":"description","testId":"a92da3b0-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.683Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.686Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:00.686Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:54:00.686Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.689Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.689Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.689Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.689Z"}
{"name":"name","description":"description","testId":"a92e8e10-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.689Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.692Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.692Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:00.693Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:54:00.693Z"}
[{"name":"name","description":"description","testId":"a92e8e10-dbba-11e7-9b30-731ffc1a495d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.696Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:00.697Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:00.697Z"}
{"name":"name","description":"description","testId":"a92fc690-dbba-11e7-9b30-731ffc1a495d","level":"info","message":"","timestamp":"2017-12-08T01:54:00.697Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.699Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.700Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:00.700Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:54:00.700Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:00.703Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:00.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:00.703Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:54:00.703Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:54:32.348Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:32.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:32.348Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:32.349Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:54:32.399Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.452Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.454Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.454Z"}
{"name":"name","description":"description","testId":"bc1d8260-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.454Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.464Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.464Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.464Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.465Z"}
{"name":"name","description":"description","testId":"bc1f0900-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.465Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.467Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.468Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:32.468Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.468Z"}
[{"name":"name","description":"description","testId":"bc1d8260-dbba-11e7-89e7-194d0690ea0d"},{"name":"name","description":"description","testId":"bc1f0900-dbba-11e7-89e7-194d0690ea0d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.472Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.472Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.472Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.473Z"}
{"name":"name","description":"description","testId":"bc206890-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.473Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.475Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.476Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:32.476Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.477Z"}
{"name":"name","description":"description","testId":"bc206890-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.477Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.480Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.480Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:32.480Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:54:32.480Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.483Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.483Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.483Z"}
{"name":"name","description":"description","testId":"bc21ef30-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.483Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.485Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:32.485Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:54:32.485Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.487Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.488Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.488Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.488Z"}
{"name":"name","description":"description","testId":"bc22b280-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.488Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.490Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:32.490Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:54:32.491Z"}
[{"name":"name","description":"description","testId":"bc22b280-dbba-11e7-89e7-194d0690ea0d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.493Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.493Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:32.493Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:32.493Z"}
{"name":"name","description":"description","testId":"bc2375d0-dbba-11e7-89e7-194d0690ea0d","level":"info","message":"","timestamp":"2017-12-08T01:54:32.494Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:32.495Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:32.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:32.496Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:32.496Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:70:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:54:32.496Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:37.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:37.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:37.499Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:54:37.499Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:54:57.024Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:57.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:57.025Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:54:57.025Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:57.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.026Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:54:57.026Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:54:57.026Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:57.026Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:54:57.077Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.133Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.134Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.134Z"}
{"name":"name","description":"description","testId":"cad360e0-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.135Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.144Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.145Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.145Z"}
{"name":"name","description":"description","testId":"cad50e90-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.145Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.148Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:57.148Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.148Z"}
[{"name":"name","description":"description","testId":"cad360e0-dbba-11e7-93b7-b110f14f24c7"},{"name":"name","description":"description","testId":"cad50e90-dbba-11e7-93b7-b110f14f24c7"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.152Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.153Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.153Z"}
{"name":"name","description":"description","testId":"cad64710-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.153Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.156Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:54:57.157Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.157Z"}
{"name":"name","description":"description","testId":"cad64710-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.157Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.160Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.160Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:57.161Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:54:57.161Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.163Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.164Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.164Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.164Z"}
{"name":"name","description":"description","testId":"cad7f4c0-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.164Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.166Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:57.166Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:54:57.166Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.168Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.169Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.169Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.169Z"}
{"name":"name","description":"description","testId":"cad8b810-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.169Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.171Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:57.171Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:54:57.171Z"}
[{"name":"name","description":"description","testId":"cad8b810-dbba-11e7-93b7-b110f14f24c7"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.174Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.174Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:54:57.174Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:54:57.174Z"}
{"name":"name","description":"description","testId":"cad97b60-dbba-11e7-93b7-b110f14f24c7","level":"info","message":"","timestamp":"2017-12-08T01:54:57.174Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.176Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.176Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:57.177Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:54:57.177Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:70:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:54:57.177Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:54:57.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:54:57.179Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:54:57.179Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:54:57.179Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:57:13.170Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:57:13.171Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:57:13.223Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.279Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.280Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.280Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.281Z"}
{"name":"name","description":"description","testId":"1bf99c00-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.281Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.290Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.290Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.290Z"}
{"name":"name","description":"description","testId":"1bfb22a0-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.291Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.293Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:57:13.293Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.294Z"}
[{"name":"name","description":"description","testId":"1bf99c00-dbbb-11e7-b04b-33c40ee80efe"},{"name":"name","description":"description","testId":"1bfb22a0-dbbb-11e7-b04b-33c40ee80efe"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.297Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.298Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.298Z"}
{"name":"name","description":"description","testId":"1bfc5b20-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.298Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.301Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:57:13.302Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.302Z"}
{"name":"name","description":"description","testId":"1bfc5b20-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.302Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.305Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.305Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:13.305Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:57:13.305Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.308Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.308Z"}
{"name":"name","description":"description","testId":"1bfde1c0-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.308Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.310Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:13.310Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:57:13.310Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.312Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.313Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.313Z"}
{"name":"name","description":"description","testId":"1bfea510-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.313Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.315Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.315Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:57:13.315Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:57:13.315Z"}
[{"name":"name","description":"description","testId":"1bfea510-dbbb-11e7-b04b-33c40ee80efe"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.318Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:57:13.318Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:57:13.318Z"}
{"name":"name","description":"description","testId":"1bff6860-dbbb-11e7-b04b-33c40ee80efe","level":"info","message":"","timestamp":"2017-12-08T01:57:13.318Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.320Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.320Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:57:13.320Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:57:13.321Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:70:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:57:13.321Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:57:13.323Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:57:13.323Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:57:13.323Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:57:13.323Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T01:59:44.769Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:59:44.769Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:59:44.769Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T01:59:44.769Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:59:44.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.770Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T01:59:44.770Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T01:59:44.770Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:59:44.770Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T01:59:44.827Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.880Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.882Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.882Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.882Z"}
{"name":"name","description":"description","testId":"76563d20-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.882Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.892Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.892Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.892Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.892Z"}
{"name":"name","description":"description","testId":"7657c3c0-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.892Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.895Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.895Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:59:44.895Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.896Z"}
[{"name":"name","description":"description","testId":"76563d20-dbbb-11e7-9707-11506c96877c"},{"name":"name","description":"description","testId":"7657c3c0-dbbb-11e7-9707-11506c96877c"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.900Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.900Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.900Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.900Z"}
{"name":"name","description":"description","testId":"7658fc40-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.900Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.903Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.904Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:59:44.905Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.905Z"}
{"name":"name","description":"description","testId":"7658fc40-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.905Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.907Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.908Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:59:44.908Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:59:44.908Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.910Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T01:59:44.910Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.910Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.915Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.915Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.915Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.916Z"}
{"name":"name","description":"description","testId":"765b6d40-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.916Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.918Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:59:44.918Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T01:59:44.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.920Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.921Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.921Z"}
{"name":"name","description":"description","testId":"765c3090-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.921Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.923Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.923Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:59:44.923Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T01:59:44.923Z"}
[{"name":"name","description":"description","testId":"765c3090-dbbb-11e7-9707-11506c96877c"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.926Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T01:59:44.926Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T01:59:44.926Z"}
{"name":"name","description":"description","testId":"765cf3e0-dbbb-11e7-9707-11506c96877c","level":"info","message":"","timestamp":"2017-12-08T01:59:44.926Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.928Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:59:44.928Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T01:59:44.928Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:70:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:69:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T01:59:44.929Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T01:59:44.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T01:59:44.931Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[40]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[48]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[49]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  }\n}","timestamp":"2017-12-08T01:59:44.931Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T01:59:44.931Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:01:16.853Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:16.854Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:01:16.907Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.961Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.963Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:16.963Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.963Z"}
{"name":"name","description":"description","testId":"ad38af30-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:16.963Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.973Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:16.973Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.973Z"}
{"name":"name","description":"description","testId":"ad3a35d0-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:16.973Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.976Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:16.976Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.976Z"}
[{"name":"name","description":"description","testId":"ad38af30-dbbb-11e7-9d21-a969e1bc6fad"},{"name":"name","description":"description","testId":"ad3a35d0-dbbb-11e7-9d21-a969e1bc6fad"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.980Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.980Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:16.980Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.980Z"}
{"name":"name","description":"description","testId":"ad3b4740-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:16.980Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.983Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.984Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:16.984Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.985Z"}
{"name":"name","description":"description","testId":"ad3b4740-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:16.985Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.988Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.988Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:16.988Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:01:16.988Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.990Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.990Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:16.991Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.991Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.995Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:16.995Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:16.995Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:16.996Z"}
{"name":"name","description":"description","testId":"ad3db840-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:16.996Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:16.998Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:16.998Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:01:16.998Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:17.000Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:17.001Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:17.001Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:17.001Z"}
{"name":"name","description":"description","testId":"ad3e7b90-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:17.001Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:17.003Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:17.003Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:17.003Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T02:01:17.004Z"}
[{"name":"name","description":"description","testId":"ad3e7b90-dbbb-11e7-9d21-a969e1bc6fad"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:17.008Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:17.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:17.009Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:17.009Z"}
{"name":"name","description":"description","testId":"ad3fb410-dbbb-11e7-9d21-a969e1bc6fad","level":"info","message":"","timestamp":"2017-12-08T02:01:17.009Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:17.011Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:17.011Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:17.011Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:17.011Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:73:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:01:17.011Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:17.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:17.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:17.014Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T02:01:17.014Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:01:52.798Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:52.799Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:01:52.850Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.906Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.907Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.907Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.908Z"}
{"name":"name","description":"description","testId":"c2a574c0-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.908Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.918Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.918Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.918Z"}
{"name":"name","description":"description","testId":"c2a6fb60-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.921Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:52.921Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.921Z"}
[{"name":"name","description":"description","testId":"c2a574c0-dbbb-11e7-9ed8-e36e8d49daa9"},{"name":"name","description":"description","testId":"c2a6fb60-dbbb-11e7-9ed8-e36e8d49daa9"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.925Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.926Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.926Z"}
{"name":"name","description":"description","testId":"c2a833e0-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.926Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.929Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.930Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:52.931Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.931Z"}
{"name":"name","description":"description","testId":"c2a833e0-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.931Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.933Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.933Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:52.934Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:01:52.934Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.936Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:01:52.936Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.936Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.941Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.941Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.941Z"}
{"name":"name","description":"description","testId":"c2aa7dd0-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.941Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.943Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:52.943Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:01:52.943Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.946Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.946Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.946Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.946Z"}
{"name":"name","description":"description","testId":"c2ab4120-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.948Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:52.948Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T02:01:52.949Z"}
[{"name":"name","description":"description","testId":"c2ab4120-dbbb-11e7-9ed8-e36e8d49daa9"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.951Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.952Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:01:52.952Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:01:52.952Z"}
{"name":"name","description":"description","testId":"c2ac2b80-dbbb-11e7-9ed8-e36e8d49daa9","level":"info","message":"","timestamp":"2017-12-08T02:01:52.952Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.954Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.954Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:52.954Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:01:52.954Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:73:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:01:52.954Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:01:52.956Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:01:52.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:01:52.956Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T02:01:52.956Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:02:08.543Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:02:08.544Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:08.545Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:08.545Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:02:08.600Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.657Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.659Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.659Z"}
{"name":"name","description":"description","testId":"cc08de30-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.659Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.669Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.670Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.670Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.670Z"}
{"name":"name","description":"description","testId":"cc0a8be0-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.670Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.673Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.674Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:08.674Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.674Z"}
[{"name":"name","description":"description","testId":"cc08de30-dbbb-11e7-8400-f51bf6cbea6b"},{"name":"name","description":"description","testId":"cc0a8be0-dbbb-11e7-8400-f51bf6cbea6b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.679Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.680Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.680Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.680Z"}
{"name":"name","description":"description","testId":"cc0c1280-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.680Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.683Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.684Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:08.684Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.684Z"}
{"name":"name","description":"description","testId":"cc0c1280-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.684Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.687Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:02:08.687Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:02:08.687Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.689Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.690Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:08.690Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.690Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.694Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.695Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.695Z"}
{"name":"name","description":"description","testId":"cc0e5c70-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.695Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.697Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:02:08.697Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:02:08.697Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.700Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.700Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.700Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.700Z"}
{"name":"name","description":"description","testId":"cc0f1fc0-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.700Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.702Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.703Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:08.703Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T02:02:08.703Z"}
[{"name":"name","description":"description","testId":"cc0f1fc0-dbbb-11e7-8400-f51bf6cbea6b"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.705Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.705Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:08.705Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:08.706Z"}
{"name":"name","description":"description","testId":"cc100a20-dbbb-11e7-8400-f51bf6cbea6b","level":"info","message":"","timestamp":"2017-12-08T02:02:08.706Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.708Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.708Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:08.708Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:02:08.708Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:32)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:73:85)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:02:08.708Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:08.711Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:08.712Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:08.712Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T02:02:08.712Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:02:43.153Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:43.154Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:02:43.207Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:43.261Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:43.263Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:43.263Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:43.263Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:02:52.102Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:02:52.103Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:02:52.164Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:02:52.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:02:52.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:02:52.181Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:02:52.181Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:03:02.790Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:03:02.791Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:03:02.843Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:03:02.859Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:03:02.860Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('wtf'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:02.860Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:03:02.861Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:03:14.916Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:14.916Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:14.916Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:03:14.917Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:03:14.968Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:03:15.026Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:03:15.028Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:15.028Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:03:15.028Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:03:25.155Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:25.156Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:25.156Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:03:25.156Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:25.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:03:25.157Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:03:25.157Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:25.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:03:25.157Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:03:25.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:03:25.263Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:03:25.264Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:25.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:03:25.265Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:03:42.348Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:42.349Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:03:42.350Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:03:42.401Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:03:42.456Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:03:42.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:03:42.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:03:42.457Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:04:05.511Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:04:05.512Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:05.512Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[50]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:04:05.512Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:04:05.563Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:04:05.619Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:04:05.620Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[22]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:05.620Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:04:05.620Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:04:18.749Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:04:18.750Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:04:18.800Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:04:18.856Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:04:18.857Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:18.857Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:04:18.858Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:04:25.629Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:04:25.630Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:04:25.682Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:04:25.737Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:04:25.739Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:25.739Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:04:25.739Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:04:46.822Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:46.822Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:46.822Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:04:46.823Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:04:46.875Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:04:46.931Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:04:46.932Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:04:46.932Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:04:46.932Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:05:14.559Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:05:14.560Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:05:14.614Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:05:14.669Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:14.671Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:14.671Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:05:14.671Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:05:29.920Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:05:29.921Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:05:29.974Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:05:30.033Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:30.035Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:30.035Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:05:30.036Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:05:43.005Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:43.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:43.007Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:05:43.007Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:43.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:05:43.007Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:05:43.008Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:43.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:05:43.008Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:05:43.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:05:43.117Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:43.118Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:43.118Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T02:05:43.119Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:05:52.027Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[45]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[47]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[51]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[52]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:05:52.029Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:05:52.080Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:05:52.137Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:52.138Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:52.138Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T02:05:52.139Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:05:52.139Z"}
[]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:05:57.272Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:57.272Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:05:57.273Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:05:57.323Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:05:57.378Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:05:57.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:05:57.379Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T02:05:57.380Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T02:06:37.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:06:37.144Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T02:06:37.196Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.213Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.213Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.214Z"}
{"name":"name","description":"description","testId":"6c1af4d0-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.214Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.223Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.223Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.223Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.224Z"}
{"name":"name","description":"description","testId":"6c1ca280-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.224Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.226Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.227Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:06:37.227Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.227Z"}
[{"name":"name","description":"description","testId":"6c1af4d0-dbbc-11e7-a9a9-db10f90f84ab"},{"name":"name","description":"description","testId":"6c1ca280-dbbc-11e7-a9a9-db10f90f84ab"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.231Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.231Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.231Z"}
{"name":"name","description":"description","testId":"6c1db3f0-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.231Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.234Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:06:37.235Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.235Z"}
{"name":"name","description":"description","testId":"6c1db3f0-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.235Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.239Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.239Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:06:37.240Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T02:06:37.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.242Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T02:06:37.243Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T02:06:37.243Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.245Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.246Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.246Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.246Z"}
{"name":"name","description":"description","testId":"6c1ffde0-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.246Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.248Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T02:06:37.248Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T02:06:37.248Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.250Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.251Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.251Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.251Z"}
{"name":"name","description":"description","testId":"6c20c130-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.251Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.253Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.253Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:06:37.253Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T02:06:37.253Z"}
[{"name":"name","description":"description","testId":"6c20c130-dbbc-11e7-a9a9-db10f90f84ab"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.256Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T02:06:37.256Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T02:06:37.256Z"}
{"name":"name","description":"description","testId":"6c218480-dbbc-11e7-a9a9-db10f90f84ab","level":"info","message":"","timestamp":"2017-12-08T02:06:37.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.258Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:06:37.258Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T02:06:37.258Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T02:06:37.260Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T02:06:37.260Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T02:06:37.260Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T02:06:37.260Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:20:55.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:20:55.125Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:20:55.278Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.328Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.330Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.330Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:20:55.331Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.339Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.339Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:20:55.339Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.342Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.342Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:20:55.342Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:20:55.342Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.347Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:20:55.348Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:20:55.348Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.351Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.351Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.352Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:20:55.352Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.354Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:20:55.354Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:20:55.354Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.356Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.357Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.357Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:20:55.357Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.358Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:20:55.359Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:20:55.359Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:20:55.360Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:20:55.361Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:20:55.361Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:20:55.361Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:21:27.144Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:21:27.145Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:21:27.197Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.212Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.214Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.214Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:21:27.214Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.222Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.223Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.223Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:21:27.223Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.225Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.226Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:21:27.226Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:21:27.226Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.230Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.231Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:21:27.231Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:21:27.232Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.234Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.235Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:21:27.235Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.236Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:21:27.237Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:21:27.237Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.239Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.239Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:21:27.239Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.241Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:21:27.241Z"}
{"level":"info","message":"Responding with a 500 code due to Error: __STORAGE_ERROR__ item must have an id","timestamp":"2017-12-08T03:21:27.241Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:21:27.243Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:21:27.243Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:21:27.243Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:21:27.244Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:26:57.050Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:26:57.051Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:26:57.104Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.161Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.163Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.163Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:26:57.164Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.173Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.174Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:26:57.174Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.177Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.178Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:26:57.178Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:26:57.178Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.186Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.187Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:26:57.188Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:26:57.189Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.192Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.192Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.192Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:26:57.192Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.195Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:26:57.195Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:26:57.195Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.198Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.198Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.198Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:26:57.199Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.201Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.201Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:26:57.201Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:26:57.202Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:26:57.204Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:26:57.204Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:26:57.205Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:26:57.205Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:28:21.917Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:28:21.918Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:28:21.974Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.055Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.056Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:22.056Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:28:22.058Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.059Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.059Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:22.059Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:28:22.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.067Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.067Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:28:22.067Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:28:22.067Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.072Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:28:22.073Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:28:22.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.077Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:22.077Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:28:22.077Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.079Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:28:22.080Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:28:22.080Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.082Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.082Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:22.082Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:28:22.082Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:28:22.086Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:28:22.086Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:28:22.088Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:28:22.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:28:22.088Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:28:22.088Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:29:23.488Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:29:23.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:29:23.490Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:29:23.542Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.602Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.604Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.604Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:29:23.605Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.607Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:29:23.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.614Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.614Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:29:23.615Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:29:23.615Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.621Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:29:23.622Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:29:23.623Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.626Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.627Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.627Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:29:23.627Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.629Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:29:23.629Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:29:23.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.631Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.632Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.632Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:29:23.632Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.634Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:29:23.634Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:29:23.634Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:29:23.636Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:29:23.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:29:23.636Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:29:23.636Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:30:02.918Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:30:02.919Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:30:02.985Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.047Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.048Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:03.049Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:30:03.050Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.052Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.052Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:03.052Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:30:03.052Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.059Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.059Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:30:03.059Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:30:03.059Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:30:03.065Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:30:03.065Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.069Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.069Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:03.070Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:30:03.070Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.072Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:30:03.072Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:30:03.073Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.076Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:03.077Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:30:03.077Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.078Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:30:03.079Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:30:03.079Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:30:03.081Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:30:03.081Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:30:03.081Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:30:03.081Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:31:13.610Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:31:13.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:31:13.611Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:31:13.611Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:31:13.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.611Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:31:13.612Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:31:13.612Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:31:13.612Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:31:13.667Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.729Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.731Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.731Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:31:13.733Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.735Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.735Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.735Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:31:13.735Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.744Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.744Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:13.745Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:31:13.745Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.753Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:31:13.753Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:31:13.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.756Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.756Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.757Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:31:13.757Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.758Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:31:13.759Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:31:13.759Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.761Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.761Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.761Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:31:13.761Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.763Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description));\n  // users.push(user);\n  // sendJSON(response, 200, user);\n  /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-08T03:31:13.764Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:31:13.764Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:31:13.766Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:31:13.766Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:31:13.766Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:31:13.766Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:32:31.783Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:32:31.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:32:31.783Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:32:31.784Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:32:31.835Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.893Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.894Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.894Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.895Z"}
{"name":"name","description":"description","testId":"6c890270-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.895Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.896Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.897Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.897Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.897Z"}
{"name":"name","description":"description","testId":"6c895090-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.897Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.909Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.909Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.909Z"}
{"name":"name","description":"description","testId":"6c8b2550-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.909Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.910Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.910Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:32:31.910Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.911Z"}
{"name":"name","description":"description","testId":"6c895090-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.911Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.916Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.917Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:32:31.917Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.917Z"}
[{"name":"name","description":"description","testId":"6c890270-dbc8-11e7-a5cc-2d2b29e37ba7"},{"name":"name","description":"description","testId":"6c895090-dbc8-11e7-a5cc-2d2b29e37ba7"},{"name":"name","description":"description","testId":"6c8b2550-dbc8-11e7-a5cc-2d2b29e37ba7"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.922Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.923Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:32:31.923Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:32:31.923Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.925Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:32:31.925Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:32:31.926Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.928Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.928Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.928Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.928Z"}
{"name":"name","description":"description","testId":"6c8e0b80-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.928Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.931Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:32:31.931Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:32:31.931Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.933Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.933Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.933Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.934Z"}
{"name":"name","description":"description","testId":"6c8eced0-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.934Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.936Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:32:31.936Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:32:31.936Z"}
[{"name":"name","description":"description","testId":"6c8eced0-dbc8-11e7-a5cc-2d2b29e37ba7"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.939Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.939Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:32:31.939Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:32:31.939Z"}
{"name":"name","description":"description","testId":"6c8fb930-dbc8-11e7-a5cc-2d2b29e37ba7","level":"info","message":"","timestamp":"2017-12-08T03:32:31.939Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.941Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:32:31.941Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:32:31.941Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:32:31.943Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:32:31.943Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:32:31.943Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:32:31.943Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:35:29.283Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:35:29.283Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:35:29.284Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:35:29.339Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.399Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.399Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.399Z"}
{"name":"name","description":"description","testId":"d655f870-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.399Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.401Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.401Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.401Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.401Z"}
{"name":"name","description":"description","testId":"d6564690-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.401Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.412Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.413Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.413Z"}
{"name":"name","description":"description","testId":"d6581b50-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.413Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.413Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:35:29.414Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.415Z"}
{"name":"name","description":"description","testId":"d6564690-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.415Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.420Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:35:29.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.421Z"}
[{"name":"name","description":"description","testId":"d655f870-dbc8-11e7-af6c-53df3b1340cf"},{"name":"name","description":"description","testId":"d6564690-dbc8-11e7-af6c-53df3b1340cf"},{"name":"name","description":"description","testId":"d6581b50-dbc8-11e7-af6c-53df3b1340cf"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.421Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.422Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:35:29.422Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:35:29.422Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.428Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:35:29.428Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:35:29.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.431Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.431Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.431Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.431Z"}
{"name":"name","description":"description","testId":"d65ada70-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.432Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.434Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:35:29.434Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:35:29.434Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.437Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.437Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.437Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.437Z"}
{"name":"name","description":"description","testId":"d65bc4d0-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.437Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.440Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.440Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:35:29.440Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:35:29.441Z"}
[{"name":"name","description":"description","testId":"d65bc4d0-dbc8-11e7-af6c-53df3b1340cf"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.443Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n\n  // storage.addItem(user)\n  //   .then(() => {\n  //     sendJSON(response, 200, user);\n  //   })\n  //   .catch(error => {\n  //     sendStatus(response, 500, error);\n  //   });\n}","timestamp":"2017-12-08T03:35:29.444Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:35:29.444Z"}
{"name":"name","description":"description","testId":"d65cd640-dbc8-11e7-af6c-53df3b1340cf","level":"info","message":"","timestamp":"2017-12-08T03:35:29.444Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:35:29.446Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:35:29.446Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:35:29.448Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:35:29.448Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:35:29.449Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:35:29.449Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:36:20.123Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:20.124Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:36:20.181Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.198Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.200Z"}
{"name":"name","description":"description","testId":"f49d9680-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.200Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.212Z"}
{"name":"name","description":"description","testId":"f49f6b40-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.212Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.215Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.215Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:20.215Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.216Z"}
[{"name":"name","description":"description","testId":"f49d9680-dbc8-11e7-a768-2d4a062446d8"},{"name":"name","description":"description","testId":"f49f6b40-dbc8-11e7-a768-2d4a062446d8"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.220Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.220Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.220Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.221Z"}
{"name":"name","description":"description","testId":"f4a0a3c0-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.221Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.224Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.226Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:20.226Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.229Z"}
{"name":"name","description":"description","testId":"f4a0a3c0-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.229Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.232Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.232Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:20.232Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:36:20.232Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.235Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:20.235Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:36:20.236Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.238Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.239Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.239Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.239Z"}
{"name":"name","description":"description","testId":"f4a389f0-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.239Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.241Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:20.242Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:36:20.242Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.244Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.244Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.245Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.245Z"}
{"name":"name","description":"description","testId":"f4a47450-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.245Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.247Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:20.247Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:36:20.248Z"}
[{"name":"name","description":"description","testId":"f4a47450-dbc8-11e7-a768-2d4a062446d8"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.250Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.251Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:20.251Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:20.251Z"}
{"name":"name","description":"description","testId":"f4a55eb0-dbc8-11e7-a768-2d4a062446d8","level":"info","message":"","timestamp":"2017-12-08T03:36:20.251Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.253Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.253Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:20.253Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:36:20.253Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:20.255Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:20.255Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:20.255Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:36:20.256Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:36:31.044Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:31.045Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:36:31.099Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.115Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.117Z"}
{"name":"name","description":"description","testId":"fb1f63d0-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.117Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.127Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.128Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.128Z"}
{"name":"name","description":"description","testId":"fb211180-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.131Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:31.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.131Z"}
[{"name":"name","description":"description","testId":"fb1f63d0-dbc8-11e7-950b-07e6e0e8a777"},{"name":"name","description":"description","testId":"fb211180-dbc8-11e7-950b-07e6e0e8a777"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.136Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.136Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.136Z"}
{"name":"name","description":"description","testId":"fb224a00-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.136Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.140Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.140Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:31.141Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.144Z"}
{"name":"name","description":"description","testId":"fb224a00-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.144Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.148Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.148Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:31.148Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:36:31.148Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.151Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:31.151Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:36:31.151Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.154Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.154Z"}
{"name":"name","description":"description","testId":"fb250920-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.154Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.157Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:31.157Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:36:31.157Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.160Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.160Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.160Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.160Z"}
{"name":"name","description":"description","testId":"fb25f380-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.160Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.163Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.163Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:31.163Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:36:31.163Z"}
[{"name":"name","description":"description","testId":"fb25f380-dbc8-11e7-950b-07e6e0e8a777"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.166Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:31.167Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:31.167Z"}
{"name":"name","description":"description","testId":"fb2704f0-dbc8-11e7-950b-07e6e0e8a777","level":"info","message":"","timestamp":"2017-12-08T03:36:31.167Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.169Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.169Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:31.169Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:36:31.169Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:31.171Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:31.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:31.171Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:36:31.171Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:36:40.742Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:40.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:40.743Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:36:40.743Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:40.743Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.744Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:36:40.744Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:40.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:40.744Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:36:40.797Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.813Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.814Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.814Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.815Z"}
{"name":"name","description":"description","testId":"00e72ff0-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.815Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.825Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.825Z"}
{"name":"name","description":"description","testId":"00e8b690-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.825Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.828Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:40.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.828Z"}
[{"name":"name","description":"description","testId":"00e72ff0-dbc9-11e7-afa1-cfe17d2ddf3f"},{"name":"name","description":"description","testId":"00e8b690-dbc9-11e7-afa1-cfe17d2ddf3f"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.832Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.832Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.832Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.832Z"}
{"name":"name","description":"description","testId":"00e9c800-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.832Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.836Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:40.836Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.837Z"}
{"name":"name","description":"description","testId":"00e9c800-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.837Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.839Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.839Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:40.840Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:36:40.840Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.843Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:40.844Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:36:40.844Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.848Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.848Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.848Z"}
{"name":"name","description":"description","testId":"00ec3900-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.848Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.850Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:40.850Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:36:40.850Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.853Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.853Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.853Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.853Z"}
{"name":"name","description":"description","testId":"00ecfc50-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.853Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.855Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:40.855Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:36:40.856Z"}
[{"name":"name","description":"description","testId":"00ecfc50-dbc9-11e7-afa1-cfe17d2ddf3f"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.858Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.858Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:40.858Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:40.859Z"}
{"name":"name","description":"description","testId":"00edbfa0-dbc9-11e7-afa1-cfe17d2ddf3f","level":"info","message":"","timestamp":"2017-12-08T03:36:40.859Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.860Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.861Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:40.861Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:36:40.861Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:40.862Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:40.863Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:40.863Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:36:40.863Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:36:57.345Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:57.346Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:36:57.398Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.454Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.455Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.455Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.456Z"}
{"name":"name","description":"description","testId":"0ad23ff0-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.456Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.466Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.467Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.467Z"}
{"name":"name","description":"description","testId":"0ad414b0-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.467Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.469Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.470Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:57.470Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.470Z"}
[{"name":"name","description":"description","testId":"0ad23ff0-dbc9-11e7-8f0d-319202ce365d"},{"name":"name","description":"description","testId":"0ad414b0-dbc9-11e7-8f0d-319202ce365d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.474Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.474Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.474Z"}
{"name":"name","description":"description","testId":"0ad52620-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.474Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.479Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.480Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:57.480Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.481Z"}
{"name":"name","description":"description","testId":"0ad52620-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.481Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.483Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:57.484Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:36:57.484Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.486Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:36:57.486Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:36:57.487Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.489Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.489Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.489Z"}
{"name":"name","description":"description","testId":"0ad77010-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.489Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.491Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:36:57.492Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:36:57.492Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.494Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.494Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.494Z"}
{"name":"name","description":"description","testId":"0ad83360-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.494Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.496Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:57.496Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:36:57.497Z"}
[{"name":"name","description":"description","testId":"0ad83360-dbc9-11e7-8f0d-319202ce365d"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.499Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.500Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:36:57.500Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:36:57.500Z"}
{"name":"name","description":"description","testId":"0ad91dc0-dbc9-11e7-8f0d-319202ce365d","level":"info","message":"","timestamp":"2017-12-08T03:36:57.500Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.502Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:57.502Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:36:57.502Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:36:57.504Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:36:57.504Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:36:57.504Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:36:57.504Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:37:25.469Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:37:25.470Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:37:25.520Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.575Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.577Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.577Z"}
{"name":"name","description":"description","testId":"1b955390-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.577Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.587Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.588Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.588Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.588Z"}
{"name":"name","description":"description","testId":"1b970140-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.588Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.591Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.591Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:37:25.591Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.591Z"}
[{"name":"name","description":"description","testId":"1b955390-dbc9-11e7-9970-3d9f89f41099"},{"name":"name","description":"description","testId":"1b970140-dbc9-11e7-9970-3d9f89f41099"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.596Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.596Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.596Z"}
{"name":"name","description":"description","testId":"1b9839c0-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.596Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.600Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.601Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:37:25.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.602Z"}
{"name":"name","description":"description","testId":"1b9839c0-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.602Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.605Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.605Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:37:25.605Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:37:25.605Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.607Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:37:25.607Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:37:25.608Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.610Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.610Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.610Z"}
{"name":"name","description":"description","testId":"1b9a5ca0-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.610Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.612Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:37:25.613Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:37:25.613Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.615Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.615Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.615Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.615Z"}
{"name":"name","description":"description","testId":"1b9b1ff0-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.615Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.617Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.618Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:37:25.618Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:37:25.618Z"}
[{"name":"name","description":"description","testId":"1b9b1ff0-dbc9-11e7-9970-3d9f89f41099"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.621Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.621Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:37:25.621Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:37:25.621Z"}
{"name":"name","description":"description","testId":"1b9c0a50-dbc9-11e7-9970-3d9f89f41099","level":"info","message":"","timestamp":"2017-12-08T03:37:25.621Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.623Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.623Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:37:25.623Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:37:25.623Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:37:25.625Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:37:25.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[52]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[53]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:37:25.625Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:37:25.625Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:38:03.901Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:03.902Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:03.902Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:38:03.902Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:03.902Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:03.902Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:38:03.903Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:03.903Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:03.903Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:38:03.962Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.023Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.025Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.025Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.026Z"}
{"name":"name","description":"description","testId":"32802da0-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.026Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.035Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.036Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.036Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.036Z"}
{"name":"name","description":"description","testId":"3281b440-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.036Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.039Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.040Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:04.040Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.040Z"}
[{"name":"name","description":"description","testId":"32802da0-dbc9-11e7-a58d-6df2d4bbc8ee"},{"name":"name","description":"description","testId":"3281b440-dbc9-11e7-a58d-6df2d4bbc8ee"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.045Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.046Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.046Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.046Z"}
{"name":"name","description":"description","testId":"32833ae0-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.046Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:04.051Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.052Z"}
{"name":"name","description":"description","testId":"32833ae0-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.052Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.054Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.054Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:38:04.055Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:38:04.055Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.057Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:04.057Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:38:04.058Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.060Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.061Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.061Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.061Z"}
{"name":"name","description":"description","testId":"328584d0-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.061Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.063Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:38:04.064Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:38:04.064Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.066Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.066Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.066Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.066Z"}
{"name":"name","description":"description","testId":"32864820-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.066Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.069Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.069Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:04.069Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:38:04.070Z"}
[{"name":"name","description":"description","testId":"32864820-dbc9-11e7-a58d-6df2d4bbc8ee"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.073Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:04.074Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:04.075Z"}
{"name":"name","description":"description","testId":"328780a0-dbc9-11e7-a58d-6df2d4bbc8ee","level":"info","message":"","timestamp":"2017-12-08T03:38:04.075Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.078Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:04.079Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:38:04.079Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:04.081Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:04.081Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:04.081Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:38:04.081Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:38:32.682Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:32.683Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:38:32.741Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.799Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.800Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.801Z"}
{"name":"name","description":"description","testId":"43a6e510-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.801Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.812Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.812Z"}
{"name":"name","description":"description","testId":"43a892c0-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.812Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.815Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:32.815Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.816Z"}
[{"name":"name","description":"description","testId":"43a6e510-dbc9-11e7-89ec-f9d58c80424a"},{"name":"name","description":"description","testId":"43a892c0-dbc9-11e7-89ec-f9d58c80424a"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.820Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.820Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.820Z"}
{"name":"name","description":"description","testId":"43a9cb40-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.820Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.823Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.824Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:32.824Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.824Z"}
{"name":"name","description":"description","testId":"43a9cb40-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.824Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.828Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:38:32.828Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:38:32.828Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.832Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.832Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:38:32.832Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:38:32.832Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.835Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.835Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.835Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.835Z"}
{"name":"name","description":"description","testId":"43ac1530-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.835Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.837Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:38:32.838Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:38:32.838Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.840Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.840Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.840Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.840Z"}
{"name":"name","description":"description","testId":"43acd880-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.840Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.842Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:32.843Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:38:32.844Z"}
[{"name":"name","description":"description","testId":"43acd880-dbc9-11e7-89ec-f9d58c80424a"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.846Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.847Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:38:32.847Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:38:32.847Z"}
{"name":"name","description":"description","testId":"43ade9f0-dbc9-11e7-89ec-f9d58c80424a","level":"info","message":"","timestamp":"2017-12-08T03:38:32.847Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.849Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.849Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:32.849Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:38:32.849Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:38:32.851Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:38:32.851Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:38:32.852Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:38:32.852Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:39:30.541Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:39:30.542Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:39:30.599Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.654Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.656Z"}
{"name":"name","description":"description","testId":"6622de00-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.656Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.665Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.666Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.666Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.666Z"}
{"name":"name","description":"description","testId":"662464a0-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.666Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.669Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.669Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:39:30.669Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.669Z"}
[{"name":"name","description":"description","testId":"6622de00-dbc9-11e7-bbad-a75b76535b72"},{"name":"name","description":"description","testId":"662464a0-dbc9-11e7-bbad-a75b76535b72"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.673Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.673Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.673Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.674Z"}
{"name":"name","description":"description","testId":"66259d20-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.674Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.677Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.678Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:39:30.678Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.679Z"}
{"name":"name","description":"description","testId":"66259d20-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.679Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.682Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.683Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:39:30.683Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-08T03:39:30.683Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.685Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:39:30.685Z"}
{"level":"info","message":"Responding with a 404 code due to id not found","timestamp":"2017-12-08T03:39:30.686Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.688Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.689Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.689Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.689Z"}
{"name":"name","description":"description","testId":"6627e710-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.689Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.691Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:39:30.691Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:39:30.692Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.694Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.694Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.694Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.694Z"}
{"name":"name","description":"description","testId":"6628aa60-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.694Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.698Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:39:30.698Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-08T03:39:30.699Z"}
[{"name":"name","description":"description","testId":"6628aa60-dbc9-11e7-bbad-a75b76535b72"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.701Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.702Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:39:30.702Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:39:30.702Z"}
{"name":"name","description":"description","testId":"6629e2e0-dbc9-11e7-bbad-a75b76535b72","level":"info","message":"","timestamp":"2017-12-08T03:39:30.702Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.704Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:39:30.704Z"}
{"level":"info","message":"Responding with a 404 code due to id does not exit","timestamp":"2017-12-08T03:39:30.704Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:39:30.707Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:39:30.708Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.getId() === user.getId();\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:39:30.708Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-08T03:39:30.708Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:44:13.079Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[48]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[53]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[54]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:44:13.080Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:44:13.140Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:44:13.198Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:44:13.199Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:44:13.199Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T03:44:13.200Z"}
{"name":"name","description":"description","testId":"0e8ba900-dbca-11e7-8ef9-db10ea3de5e0","level":"info","message":"","timestamp":"2017-12-08T03:44:13.200Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:44:13.210Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:44:13.211Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:44:13.212Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:47:02.151Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:47:02.152Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:47:02.152Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:47:02.152Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:47:02.152Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:47:02.152Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:47:02.153Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:47:02.153Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:47:02.153Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:47:02.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:47:02.268Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:47:02.269Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:47:02.269Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:47:02.270Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:47:02.272Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:47:02.272Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:47:02.272Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:48:20.615Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:48:20.616Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:48:20.671Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:48:20.693Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:48:20.695Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:48:20.695Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:48:20.696Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:48:20.697Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:48:20.698Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:48:20.698Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:50:58.827Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:50:58.828Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:50:58.829Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:50:58.829Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:50:58.883Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:50:58.944Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:50:58.945Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:50:58.945Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:50:58.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:50:58.948Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:50:58.948Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:51:18.134Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:18.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:51:18.134Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:51:18.135Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:51:18.187Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:51:18.206Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:18.207Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:51:18.207Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:51:18.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:51:18.209Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:51:18.210Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:51:18.210Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:51:38.604Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:51:38.605Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:51:38.661Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:51:38.715Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:51:38.716Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:51:38.716Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:51:38.717Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:51:38.718Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:51:38.719Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:51:38.719Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:53:17.305Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:17.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:53:17.305Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:53:17.305Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:17.305Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  console.log('this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:53:17.306Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:53:17.306Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:17.306Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:53:17.306Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:53:17.365Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:53:17.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:53:17.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  console.log('this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:53:17.427Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:53:17.429Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:53:17.431Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:53:17.432Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:53:17.432Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:53:42.845Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  console.log('this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log('then this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[47]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[50]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[51]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[55]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[56]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[57]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[58]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:53:42.846Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:53:42.901Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:53:42.960Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:53:42.961Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  console.log('this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log('then this happens'); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[44]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:53:42.961Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:53:42.963Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:53:42.964Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:53:42.964Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:53:42.964Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:55:38.956Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:55:38.957Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:55:39.013Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:55:39.075Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:55:39.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:55:39.076Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:55:39.078Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:55:39.079Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:55:39.080Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:55:39.080Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:55:57.090Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:57.091Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:55:57.091Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:55:57.091Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:57.091Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:55:57.091Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:55:57.092Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:55:57.092Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:55:57.092Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:55:57.148Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:55:57.207Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:55:57.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:55:57.208Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:55:57.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:55:57.212Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:55:57.212Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:55:57.212Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:56:31.610Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:56:31.611Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:31.612Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:56:31.612Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:56:31.664Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:56:31.725Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:56:31.726Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:56:31.726Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:56:31.729Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:56:31.730Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:56:31.730Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:56:31.730Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:56:53.413Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:53.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:56:53.414Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:56:53.479Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:56:53.536Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:56:53.538Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:56:53.538Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:56:53.539Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:56:53.541Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:56:53.541Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:56:53.541Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:57:14.288Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:57:14.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:57:14.290Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[45]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[46]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[48]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[49]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[54]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[55]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[56]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:57:14.290Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:57:14.345Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:57:14.403Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:57:14.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:57:14.404Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:57:14.405Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:57:14.407Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:57:14.407Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:57:14.407Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T03:58:33.704Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T03:58:33.705Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T03:58:33.759Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:58:33.819Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T03:58:33.820Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T03:58:33.821Z"}
{"level":"info","message":"Responding with a 500 code due to TypeError: path must be a string or Buffer","timestamp":"2017-12-08T03:58:33.823Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T03:58:33.824Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T03:58:33.825Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T03:58:33.825Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T04:01:22.633Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:22.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T04:01:22.635Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T04:01:22.690Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:01:22.707Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T04:01:22.708Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:01:22.709Z"}
{"level":"info","message":"Responding with a 500 code due to Error: EISDIR: illegal operation on a directory, read","timestamp":"2017-12-08T04:01:22.713Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:01:22.720Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T04:01:22.720Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T04:01:22.720Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T04:01:41.697Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:41.697Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T04:01:41.698Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T04:01:41.759Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:01:41.781Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T04:01:41.783Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:01:41.783Z"}
{"level":"info","message":"Responding with a 500 code due to Error: EISDIR: illegal operation on a directory, read","timestamp":"2017-12-08T04:01:41.789Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:01:41.798Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T04:01:41.799Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at emitNone (events.js:105:13)\n    at IncomingMessage.emit (events.js:207:7)\n    at endReadableNT (_stream_readable.js:1047:12)\n    at _combinedTickCallback (internal/process/next_tick.js:102:11)\n    at process._tickCallback (internal/process/next_tick.js:161:9)","level":"info","timestamp":"2017-12-08T04:01:41.799Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T04:02:51.319Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:51.320Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T04:02:51.321Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T04:02:51.390Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:02:51.414Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T04:02:51.417Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:02:51.417Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T04:02:51.424Z"}
{"name":"name","description":"description","testId":"a90e2fa0-dbcc-11e7-93e5-0bf5c0dd51d5","level":"info","message":"","timestamp":"2017-12-08T04:02:51.424Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:02:51.443Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T04:02:51.445Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at emitNone (events.js:105:13)\n    at IncomingMessage.emit (events.js:207:7)\n    at endReadableNT (_stream_readable.js:1047:12)\n    at _combinedTickCallback (internal/process/next_tick.js:102:11)\n    at process._tickCallback (internal/process/next_tick.js:161:9)","level":"info","timestamp":"2017-12-08T04:02:51.445Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T04:02:57.592Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T04:02:57.593Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T04:02:57.652Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:02:57.671Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T04:02:57.673Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:02:57.673Z"}
{"level":"info","message":"Responding with a 500 code due to Error: EACCES: permission denied, open '/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/db.json'","timestamp":"2017-12-08T04:02:57.678Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:02:57.687Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T04:02:57.688Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-08T04:02:57.689Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-08T04:03:06.531Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    console.log(request.url.query.id);\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    if (foundUserWithId) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n      sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n      return;\n    } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 404, 'id not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[7]++;cov_17iwyeiy26.s[46]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[6][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[47]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    if (userToBeRemoved) {/* istanbul ignore next */cov_17iwyeiy26.b[7][0]++;\n      const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[49]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[8]++;cov_17iwyeiy26.s[50]++;\n        console.log(userToBeRemoved.testId, user.testId); /* istanbul ignore next */cov_17iwyeiy26.s[51]++;\n        return userToBeRemoved.testId === user.testId;\n      })); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n      users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[53]++;\n      sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[54]++;\n      return;\n    } else {/* istanbul ignore next */cov_17iwyeiy26.b[7][1]++;cov_17iwyeiy26.s[55]++;\n      sendStatus(response, 404, 'id does not exit');\n    }\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[6][1]++;cov_17iwyeiy26.s[56]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[57]++;\n    return;\n  }\n}","timestamp":"2017-12-08T04:03:06.532Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-08T04:03:06.591Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:03:06.611Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-08T04:03:06.612Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  storage.addItem(user).\n  then(() => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n    sendJSON(response, 200, user);\n  }).\n  catch(error => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[43]++;\n    console.log(error); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    sendStatus(response, 500, error);\n  });\n  //! users.push(user);\n  //! sendJSON(response, 200, user);\n}","timestamp":"2017-12-08T04:03:06.613Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-08T04:03:06.621Z"}
{"name":"name","description":"description","testId":"b21cc250-dbcc-11e7-92d8-fb8f4c0188fa","level":"info","message":"","timestamp":"2017-12-08T04:03:06.621Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-08T04:03:06.632Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-08T04:03:06.633Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at emitNone (events.js:105:13)\n    at IncomingMessage.emit (events.js:207:7)\n    at endReadableNT (_stream_readable.js:1047:12)\n    at _combinedTickCallback (internal/process/next_tick.js:102:11)\n    at process._tickCallback (internal/process/next_tick.js:161:9)","level":"info","timestamp":"2017-12-08T04:03:06.633Z"}
