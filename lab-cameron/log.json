{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:19.533Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:19.620Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:19.677Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:19.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:19.680Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:19.680Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:34.536Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:34.587Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:34.644Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:34.646Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:54.862Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:54.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:54.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:54.973Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:16:34.530Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:16:34.586Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:16:34.643Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:16:34.644Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:37.965Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:20:38.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:20:38.075Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:10.272Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:10.325Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:32.138Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:32.205Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:32.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:21:32.264Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.778Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:38.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:38.886Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:58.770Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:58.826Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:07.732Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:07.790Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:07.844Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:48.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:48.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:48.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:24:29.521Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:24:29.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:24:29.627Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:24:29.628Z"}
{"id":{},"timestamp":"2017-12-07T01:24:29.628Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.729Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:04.784Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:04.841Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:04.843Z"}
{"id":{},"timestamp":"2017-12-07T01:25:04.843Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:44.652Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:44.705Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:44.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:44.759Z"}
{"name":"name","description":"description","id":{},"timestamp":"2017-12-07T01:25:44.759Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:59.079Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:59.131Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:59.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:59.148Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:27:38.153Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:27:38.207Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:27:38.208Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:29:38.076Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:29:38.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:29:38.183Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"nonsense","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:07.296Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:07.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:07.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:07.368Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:46.059Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:46.112Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:46.114Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:31:15.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:31:15.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:31:15.274Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:31:15.274Z"}
