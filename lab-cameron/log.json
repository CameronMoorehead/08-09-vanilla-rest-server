{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:19.533Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:19.534Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:19.620Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:19.677Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:19.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:19.680Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:19.680Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:34.536Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:34.537Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:34.587Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:34.644Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:34.646Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:34.646Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:14:54.862Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:14:54.863Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:14:54.918Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:14:54.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:14:54.973Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:14:54.973Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:16:34.530Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n  // Here, I can create my user since all test pass\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:16:34.531Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:16:34.586Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:16:34.643Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:16:34.644Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:16:34.644Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:20:37.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:37.965Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:20:38.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:20:38.075Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:20:38.076Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.217Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:10.272Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:10.325Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:10.327Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:32.138Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:32.139Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:32.205Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:32.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:21:32.264Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:21:32.264Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:38.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.778Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:38.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:38.886Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:38.887Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.718Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:21:58.770Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:21:58.826Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:21:58.827Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:07.732Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.733Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:07.790Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:07.844Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:07.845Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:23:48.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.022Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:23:48.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:23:48.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T01:23:48.130Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:24:29.521Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.522Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:24:29.572Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:24:29.627Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:24:29.628Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:24:29.628Z"}
{"id":{},"timestamp":"2017-12-07T01:24:29.628Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:04.728Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.729Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:04.784Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:04.841Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.title, request.body.content)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:04.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:04.843Z"}
{"id":{},"timestamp":"2017-12-07T01:25:04.843Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:44.652Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.653Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:44.705Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:44.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:44.759Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:44.759Z"}
{"name":"name","description":"description","id":{},"timestamp":"2017-12-07T01:25:44.759Z","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:25:59.079Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.080Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:25:59.131Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:25:59.147Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:25:59.148Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:25:59.148Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.098Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:27:38.153Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:27:38.207Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:27:38.208Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:27:38.208Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:29:38.076Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.077Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:29:38.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:29:38.183Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, 'nonsense');\n}","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"nonsense","timestamp":"2017-12-07T01:29:38.185Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:07.296Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:07.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:07.366Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:07.368Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:07.368Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.002Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:30:46.059Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:30:46.112Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:30:46.114Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:30:46.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.206Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:31:15.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:31:15.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T01:31:15.274Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T01:31:15.274Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:35:59.253Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:35:59.254Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:35:59.254Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:36:25.385Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:36:25.386Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:36:25.386Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:36:52.199Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:36:52.200Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:36:52.200Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:37:21.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:37:21.368Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:37:21.368Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:37:28.352Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:37:28.353Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:37:28.353Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:42:20.386Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:42:20.388Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:42:20.388Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:42:31.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:42:31.495Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:42:31.495Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:35.323Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:35.324Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:35.324Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:35.903Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:35.905Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:35.905Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:43:37.157Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:43:37.158Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:43:37.158Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:47:43.578Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:47:43.579Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:47:43.579Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:13.008Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:48:13.010Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:48:13.010Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:13.017Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:48:27.504Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:48:27.505Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:48:27.505Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:48:27.514Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:00.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:00.114Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:00.115Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:00.115Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:00.215Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:00.215Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:25.746Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:25.747Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:25.747Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:25.747Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:25.837Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:25.837Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.306Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.306Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.420Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.420Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.420Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.865Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.865Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:30.972Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:30.972Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.268Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.269Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.269Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.269Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.370Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.370Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.561Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.562Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.562Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.562Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.679Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.679Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.781Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.781Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.885Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.886Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.886Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.886Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:31.945Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:31.945Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.056Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.056Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.057Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.057Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.110Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.110Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T01:49:32.223Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T01:49:32.224Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T01:49:32.224Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T01:49:32.224Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:49:59.049Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:49:59.050Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:49:59.050Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:49:59.060Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:50:06.082Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:50:06.084Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:50:06.084Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:50:06.092Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:21.021Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:21.022Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:21.022Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:21.033Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:27.791Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:27.792Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:27.792Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:27.802Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:53:31.603Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:53:31.605Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:53:31.605Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:53:31.613Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:56:59.929Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:56:59.930Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:56:59.930Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:56:59.939Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:05.274Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:05.275Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:05.275Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:05.282Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:09.331Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:09.332Z"}
{"level":"info","message":"(request,response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:09.332Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:09.339Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:16.760Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:16.761Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name,request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:16.761Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:16.770Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T01:57:24.177Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T01:57:24.178Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T01:57:24.178Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T01:57:24.185Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:21.392Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:21.396Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:21.396Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:21.396Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:21.523Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:21.523Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:21.524Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:21.524Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:35.278Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:35.279Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:35.279Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:35.279Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:35.410Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:35.410Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:37.687Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:37.687Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:37.808Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:37.809Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:37.809Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:37.809Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:43.085Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:43.085Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:00:43.214Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:00:43.214Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:00:43.215Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:00:43.215Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:17:15.918Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:17:15.919Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:17:15.919Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:17:15.928Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:20:52.125Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:20:52.126Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:20:52.126Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:20:52.135Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:01.717Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:01.718Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:01.718Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:01.728Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:13.302Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:13.303Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:13.303Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:13.311Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:40.276Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:40.277Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:40.277Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:40.287Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:49.148Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:49.149Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:49.149Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:49.160Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:22:52.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:22:52.369Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T02:22:52.369Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:22:52.379Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:25:08.602Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:25:08.603Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:25:08.603Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:25:08.614Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.177Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.179Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.179Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.179Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.189Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.190Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.190Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.190Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.193Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.193Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.195Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.195Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.202Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:25:24.203Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.203Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:25:24.203Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:25:24.206Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:25:24.206Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T02:25:24.206Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:05.495Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:05.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:05.496Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:26:10.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:26:10.574Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:10.575Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:26:10.575Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:26:10.575Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:26:10.587Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:39.257Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:39.258Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:39.258Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:26:39.265Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:42.350Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:42.350Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:42.351Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:26:47.417Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:26:47.420Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:47.421Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:26:47.421Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:26:47.421Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:26:47.435Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:26:53.553Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:26:53.554Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:26:53.554Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:26:53.562Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:27:04.423Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:27:04.424Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:04.424Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:27:04.430Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:27:34.104Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:27:34.105Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:34.106Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:27:39.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:27:39.183Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:27:39.183Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:27:39.199Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:28:05.453Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:28:05.454Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:05.454Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:28:05.506Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:28:05.524Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:28:05.526Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:28:05.526Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:39.109Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:28:39.168Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:28:39.216Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:28:39.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:28:39.218Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:28:39.218Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:28:39.218Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:01.284Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:01.285Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:01.285Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:29:01.341Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:29:01.357Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:29:01.359Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:29:01.359Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:39.845Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:39.846Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:39.846Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:29:39.853Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:29:45.280Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:29:45.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:29:45.281Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:30:00.354Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:30:00.355Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:00.355Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:30:00.364Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:30:03.323Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:30:03.324Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:03.324Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:30:03.389Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:30:03.394Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:30:03.394Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:30:03.395Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:30:03.395Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:31:20.197Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:31:20.199Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:31:20.199Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:31:20.207Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:32:05.458Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:32:05.459Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:05.459Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:32:05.469Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:32:10.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:32:10.535Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:10.535Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:32:10.599Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:32:10.602Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:32:10.602Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:33:43.942Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:33:43.943Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:33:43.943Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:33:43.950Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:38:48.526Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:38:48.527Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:38:48.527Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:38:48.539Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:39:17.559Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:39:17.560Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:39:17.560Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:39:17.568Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:05.486Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:05.487Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:05.487Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:41:05.498Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:10.354Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:10.355Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:10.355Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:41:10.365Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:41:36.209Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:41:36.210Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:36.210Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:41:36.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:41:36.314Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:41:36.314Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:42:38.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"Responding with a 400 code due to content not found","timestamp":"2017-12-07T02:42:38.263Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Responding with a 400 code due to title not found","timestamp":"2017-12-07T02:42:46.624Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:43:25.247Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:43:25.247Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:15.382Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:15.383Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:15.383Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:47:15.391Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:19.210Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:19.213Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:47:19.213Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:23.030Z"}
{"name":"cameron","description":"aa","level":"info","message":"","timestamp":"2017-12-07T02:47:23.030Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:46.420Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:46.421Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:46.421Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:47:46.429Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:47:49.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:47:49.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:49.369Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:49.432Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:49.435Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:47:49.435Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:47:49.436Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:47:49.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:47:49.490Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:47:49.490Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:47:49.491Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:47:49.491Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:02.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:02.064Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:02.064Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:02.074Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:33.922Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:33.923Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:33.923Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:33.931Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:48:34.557Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:48:34.558Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:48:34.558Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:48:34.566Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:49:24.112Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:49:24.113Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:49:24.113Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:49:24.121Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:01.325Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:01.326Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:01.326Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:01.337Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:49.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:49.880Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:49.880Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:49.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:50:59.138Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:50:59.139Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:50:59.139Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:50:59.150Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:51:04.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:51:04.240Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:04.240Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:51:04.248Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:51:49.207Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:51:49.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:49.208Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:51:49.311Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:51:49.313Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:51:49.313Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:51:49.313Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:51:49.324Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:51:49.325Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:51:49.325Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:06.956Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:06.957Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:06.958Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:06.966Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:13.134Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:13.134Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:13.135Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:18.206Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:18.209Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:54:18.209Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:54:18.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:18.223Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:18.225Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:18.225Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:54:18.225Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:54:18.226Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T02:54:18.242Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:18.434Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:18.435Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:18.435Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:54:18.446Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:54:21.810Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T02:54:21.811Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:21.811Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:21.874Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:21.877Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T02:54:21.877Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T02:54:21.877Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T02:54:21.888Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T02:54:21.890Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T02:54:21.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:36.865Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:36.866Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:36.866Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:36.879Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:41.100Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:41.101Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:41.102Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:35:41.114Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:35:48.056Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:35:48.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:48.057Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:48.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:48.167Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:35:48.168Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:35:48.168Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:35:48.179Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:35:48.180Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:35:48.180Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:35:48.181Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:35:48.181Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:36:42.965Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:36:42.966Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:36:42.966Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:36:42.977Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:36:50.696Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:36:50.697Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:36:50.698Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:36:50.708Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:02.135Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:02.136Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:02.136Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:02.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:02.214Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:37:02.214Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:48:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:37:02.214Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:02.225Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:37:02.228Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:37:02.228Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:30.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:30.701Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:30.701Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:37:30.710Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:37:35.934Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:37:35.935Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:35.935Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:36.037Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:36.040Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:37:36.040Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:37:36.040Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:37:36.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:37:36.052Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:37:36.052Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:39:59.814Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:39:59.816Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:39:59.816Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:39:59.825Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:40:04.570Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:40:04.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:40:04.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:40:04.673Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:40:04.675Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:40:04.675Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:40:04.675Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:40:04.687Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:40:04.688Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:40:04.688Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:40:04.689Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:40:04.689Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:13.638Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:13.640Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:13.641Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:42:13.649Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:18.145Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:18.146Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:18.146Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:42:18.247Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:42:18.250Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:42:18.250Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:50:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:42:18.250Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:42:18.262Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:42:18.264Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:42:18.264Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:42:34.334Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:42:34.335Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:42:34.335Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:42:34.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('does this always get invoked?'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:08.217Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:43:08.297Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:43:08.299Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:43:08.299Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:43:08.299Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:43:08.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:43:08.311Z"}
{"level":"info","message":"(request, response) => {\n  console.log('does this always get invoked?');\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:08.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:43:08.312Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:43:08.312Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:43:59.585Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:43:59.587Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:43:59.587Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:43:59.597Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:44:44.967Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:44:44.968Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:44.968Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:44:44.979Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:44:50.004Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:44:50.005Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:50.005Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:44:50.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:44:50.117Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:44:50.117Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:44:50.117Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:44:50.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"[object Object]","timestamp":"2017-12-07T03:44:50.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:44:50.131Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:44:50.131Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:13.096Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:13.097Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:13.097Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:45:13.106Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:45.836Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:45.837Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:45.838Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:45:45.848Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:45:50.895Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:45:50.896Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:50.896Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:45:50.998Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:45:51.001Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:45:51.001Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:45:51.001Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:45:51.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:45:51.014Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:45:51.015Z"}
{"POST":{},"GET":{},"DELETE":{},"PUT":{},"level":"info","message":"aaa","timestamp":"2017-12-07T03:45:51.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:45:51.015Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:45:51.015Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:46:45.032Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:46:45.033Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:46:45.033Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:46:45.044Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:46:48.518Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:48.668Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:46:48.670Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T03:46:48.670Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:39)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T03:46:48.670Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:46:48.691Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:17.233Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:17.234Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.description){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n\n  let user = new User(request.body.name, request.body.description);\n  users.push(user);\n  sendJSON(response, 200, user);\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:17.234Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:17.243Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:20.128Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:20.129Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:20.129Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:26.989Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:26.990Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:26.990Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:27.046Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:48:27.061Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:48:27.062Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:48:27.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:48:44.491Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:48:44.492Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:44.492Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:48:44.548Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:48:44.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:48:44.603Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:48:44.603Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:49:18.541Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:49:18.542Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:49:18.542Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:49:18.592Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:49:18.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"aaa","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:49:18.654Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:49:18.654Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:04.088Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:04.089Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:04.089Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:04.142Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:04.157Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:04.158Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:04.158Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:04.159Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:04.159Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:41.484Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:41.485Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:41.485Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:41.537Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:41.593Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:41.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:41.594Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:41.596Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:41.596Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:50:55.000Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:50:55.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:55.001Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:50:55.053Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:50:55.108Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:50:55.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  console.log(users);\n}","timestamp":"2017-12-07T03:50:55.109Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:50:55.110Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:50:55.110Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:52:15.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:52:15.008Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:52:15.008Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:52:15.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:52:15.115Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:52:15.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:52:15.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:52:15.117Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:52:15.117Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:55:25.854Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:55:25.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:55:25.855Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:55:25.906Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:55:25.959Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:55:25.961Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:55:25.961Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:58:24.275Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:58:24.276Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:58:24.276Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:58:24.331Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:58:24.385Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:58:24.386Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:58:24.386Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:58:24.387Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:58:24.387Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:59:46.300Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T03:59:46.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:59:46.301Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:59:46.355Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T03:59:46.369Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T03:59:46.371Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T03:59:46.371Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:01:57.172Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:01:57.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:01:57.173Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:01:57.225Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:01:57.280Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:01:57.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:01:57.281Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:01:57.283Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:01:57.284Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:02:42.989Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:02:42.990Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:02:42.990Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:02:43.047Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:02:43.110Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:02:43.112Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[18]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:02:43.112Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:02:43.114Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:02:43.114Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:04:29.720Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:04:29.777Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:04:29.779Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T04:04:29.779Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T04:04:29.779Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:06:34.167Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:06:34.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log('response body', response.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:06:34.168Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:06:34.218Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:06:34.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:06:34.274Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log('response body', response.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:06:34.274Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:06:34.276Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:06:34.276Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:07:01.122Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:07:01.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:01.123Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:07:01.178Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:07:01.233Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:07:01.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:01.235Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:07:01.238Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:07:01.238Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:30.520Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:07:30.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:07:30.629Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:07:30.631Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:07:30.631Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:07:30.633Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:07:30.633Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:08:22.078Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:08:22.079Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:08:22.079Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:08:22.132Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:08:22.190Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:08:22.191Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:08:22.191Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:08:22.194Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:08:22.194Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:15:55.676Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:15:55.677Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:15:55.730Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:15:55.785Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:15:55.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:15:55.786Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:15:55.789Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:15:55.789Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:16:19.153Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:19.154Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:16:19.206Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:16:19.264Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:16:19.265Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:19.265Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:16:19.268Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:16:19.268Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:16:44.658Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:44.659Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:16:44.710Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:16:44.766Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:16:44.768Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:16:44.768Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:21:41.618Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:21:41.619Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:21:41.676Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:21:41.729Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:22:11.234Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  console.log('this got ran'); /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:22:11.235Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:22:11.291Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:22:11.345Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:22:11.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log('this should appear in routHandlers object');\n}","timestamp":"2017-12-07T04:22:11.346Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:24:05.836Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:24:05.837Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:24:05.889Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:24:05.944Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:24:05.945Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:24:05.945Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:25:10.130Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:25:10.131Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:25:10.189Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:25:39.102Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:25:39.103Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:25:39.103Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:25:39.162Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:27:04.113Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:27:04.114Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:27:04.115Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:27:04.167Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:28:42.401Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:42.402Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:42.402Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:28:42.455Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:28:42.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:28:42.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:42.478Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:28:42.478Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:28:42.478Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:28:54.098Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:54.098Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:54.099Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:28:54.152Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:28:54.170Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:28:54.171Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:28:54.171Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:28:54.172Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:28:54.172Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:29:11.528Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:29:11.529Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:29:11.586Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:29:11.653Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:29:11.655Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:29:11.655Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:29:11.656Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:29:11.656Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:30:48.012Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body);\n}","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:30:48.013Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:30:48.074Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:30:48.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:30:48.138Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[18]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[20]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[21]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:30:48.138Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:30:48.141Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:30:48.141Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:38:41.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:38:41.495Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:38:41.495Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:38:41.496Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:38:41.660Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:38:41.682Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:38:41.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:38:41.683Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:38:41.685Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:38:41.685Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:41:34.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:41:34.144Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:41:34.199Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:41:34.251Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:41:34.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:41:34.252Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:41:34.261Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:41:34.271Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:41:34.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:41:34.273Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:41:34.274Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:41:34.274Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:42:01.296Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:01.297Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:42:01.351Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:01.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:01.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:01.407Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:42:01.408Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:01.418Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:01.419Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:01.419Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:42:01.420Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:42:01.420Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:42:33.878Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:33.879Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:42:33.952Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:34.006Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:34.007Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendStatus(response, 200, users);\n}","timestamp":"2017-12-07T04:42:34.007Z"}
{"level":"info","message":"Responding with a 200 code due to ","timestamp":"2017-12-07T04:42:34.009Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:42:34.020Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:42:34.021Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:42:34.022Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:42:34.023Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:42:34.023Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:49:18.975Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON = (response, 200, users);\n}","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:18.976Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:49:19.029Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:19.085Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:19.086Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON = (response, 200, users);\n}","timestamp":"2017-12-07T04:49:19.086Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:24.045Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:24.046Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:24.046Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T04:49:24.048Z"}
{"message":"sendJSON is not a function","stack":"TypeError: sendJSON is not a function\n    at Object.<anonymous>.router.post (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:50:3)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T04:49:24.048Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:49:46.022Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:46.023Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:49:46.075Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:46.130Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:46.131Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:49:46.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:49:46.131Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:49:46.143Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:49:46.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:49:46.144Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:49:46.145Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:49:46.145Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:50:31.235Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:50:31.287Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:50:31.343Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:50:31.344Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:50:31.344Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:50:31.344Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:50:31.356Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:50:31.356Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:50:31.357Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:50:31.357Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:50:31.357Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:53:07.882Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:07.883Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T04:53:07.995Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:53:53.129Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:53.130Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:53:53.183Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:53:53.199Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:53:53.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[16]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[17]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:53:53.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:53:53.200Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:53:53.211Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:53:53.212Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[19]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[20]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[22]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[23]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[26]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:53:53.212Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:53:53.214Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:53:53.214Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:56:36.373Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:56:36.375Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:56:36.427Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[17]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[18]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:56:36.483Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:36.484Z"}
[{"name":"test_name_1","description":"test_description_1"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:36.494Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:36.495Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[21]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[22]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[23]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[29]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:56:36.495Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:36.497Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:56:36.497Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:57:36.879Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:57:36.879Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:57:36.880Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:57:36.930Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:57:36.986Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:57:36.987Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:57:36.997Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:57:36.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:57:36.998Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:57:37.000Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:57:37.000Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:59:33.297Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:33.298Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:59:33.357Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:33.412Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:33.413Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:33.413Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:33.413Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:33.424Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:33.425Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:33.425Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:33.427Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:59:33.427Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T04:59:56.628Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:56.629Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T04:59:56.685Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:56.740Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:56.741Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T04:59:56.741Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:56.741Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:59:56.752Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:59:56.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T04:59:56.753Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:59:56.755Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T04:59:56.755Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:00:37.236Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:00:37.237Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:00:37.294Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:37.347Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:37.348Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:00:37.348Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:37.348Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:37.359Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:37.360Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:00:37.360Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:37.362Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:00:37.362Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:03:41.680Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:03:41.681Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:03:41.738Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.793Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.794Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.794Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.794Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:03:41.806Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.806Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:03:41.810Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:41.813Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:03:41.813Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:04:13.490Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:04:13.491Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:04:13.547Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.601Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.602Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.602Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.602Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.613Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:04:13.614Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.614Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:04:13.621Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:04:13.622Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:04:13.622Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:04:13.624Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:04:13.625Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:05:00.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:05:00.367Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:05:00.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:05:00.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.491Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:05:00.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:05:00.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:05:00.508Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:05:00.508Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:05:00.509Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:07:21.318Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:07:21.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:07:21.319Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:07:21.375Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.391Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.392Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.393Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.406Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:07:21.406Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.406Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:07:21.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:07:21.423Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:07:21.423Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:07:21.424Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:07:21.424Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:08:49.871Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:49.872Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:08:49.928Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.981Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:49.982Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:49.994Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:49.995Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:49.995Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:49.995Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:50.013Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:50.014Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:08:50.014Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:08:58.890Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:08:58.891Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:58.891Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:08:58.946Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:58.999Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.000Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:59.000Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.000Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:08:59.016Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.016Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:08:59.022Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:08:59.023Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:08:59.023Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:08:59.025Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:08:59.025Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:09:55.258Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:09:55.258Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:09:55.259Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:09:55.316Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.369Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.371Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.371Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.371Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.383Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.384Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:09:55.384Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.384Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:09:55.391Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:09:55.392Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:09:55.392Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:09:55.395Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:09:55.395Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.313Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:13.314Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:11:13.374Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.427Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.428Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.428Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.428Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:13.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.442Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:13.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:13.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:13.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:13.449Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:11:13.449Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:11:54.675Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:54.676Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:11:54.733Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.786Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.787Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.787Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.787Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:11:54.800Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.800Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:11:54.804Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:11:54.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:11:54.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:11:54.806Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:11:54.806Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:08.174Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:08.175Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:08.232Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.286Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.287Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.287Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.287Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:08.300Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.300Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:08.304Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:08.306Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:08.306Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:16.925Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:16.926Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:16.981Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:16.996Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:16.997Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:16.997Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:16.997Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:17.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:17.010Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:17.014Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:17.015Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:17.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:17.017Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:17.017Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:12:34.459Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:34.460Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:12:34.515Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.568Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.569Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.569Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.569Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:12:34.581Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.581Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:12:34.585Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:12:34.586Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:12:34.586Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:12:34.587Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:12:34.587Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:13:10.373Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:13:10.374Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:13:10.429Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.483Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.484Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.484Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.484Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:13:10.498Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.499Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:13:10.503Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:13:10.504Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:13:10.504Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:13:10.507Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:13:10.507Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:14:02.635Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:14:02.636Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:02.637Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:02.637Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:14:02.702Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.759Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.760Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.760Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.760Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.774Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.775Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:02.775Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.775Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:02.778Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:02.779Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:02.779Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:02.780Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:14:02.780Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:14:16.745Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:16.746Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:14:16.802Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.855Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.856Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.868Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.869Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:14:16.869Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.869Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:14:16.872Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:14:16.873Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:14:16.873Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:14:16.874Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:14:16.874Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:15:18.277Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:15:18.278Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:15:18.335Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.388Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.389Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.389Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:15:18.404Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.405Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:15:18.411Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:15:18.412Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:15:18.412Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:15:18.414Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:15:18.414Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:16:51.167Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:16:51.168Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:16:51.224Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.277Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.278Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.278Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.278Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.292Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.293Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:16:51.293Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.293Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:16:51.300Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:16:51.301Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:16:51.301Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:16:51.304Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:16:51.304Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:18:32.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:32.608Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:18:32.665Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.717Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.718Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.718Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.718Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.732Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:32.733Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.733Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:32.743Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:32.744Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:32.744Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:32.746Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:18:32.746Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:18:48.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:48.366Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:48.367Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:18:48.422Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.476Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.489Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.490Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:18:48.490Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.490Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:18:48.498Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:18:48.499Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:18:48.499Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:18:48.502Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:18:48.502Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:20:06.308Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:06.309Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:06.310Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:20:06.367Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.419Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.420Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.420Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.420Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.434Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:06.435Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.435Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:06.442Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:06.443Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:06.443Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:06.445Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:20:06.445Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:20:46.046Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:46.047Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:20:46.102Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.153Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.154Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.154Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.154Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.166Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.167Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:20:46.167Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.167Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:20:46.173Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:20:46.173Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:20:46.174Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:20:46.177Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:20:46.178Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:21:12.887Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:12.888Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:21:12.940Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:12.993Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:12.994Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:13.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:13.010Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:13.010Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:13.010Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:13.017Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:13.019Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:21:13.019Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:21:28.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:28.125Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:21:28.183Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.235Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.236Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.236Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.236Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.251Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.252Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:21:28.252Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.252Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:21:28.259Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:21:28.260Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:21:28.260Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:21:28.262Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:21:28.262Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:15.936Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:15.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:15.937Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:15.993Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.043Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.044Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:16.044Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.044Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:16.057Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.057Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:16.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:16.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:16.065Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:16.067Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:16.067Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:30.184Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:30.185Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:30.240Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.293Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.294Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.294Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.294Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:30.308Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.308Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:30.317Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:30.318Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:30.318Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:30.321Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:30.321Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:36.827Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:36.828Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:36.884Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.939Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.940Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.940Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.940Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.954Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.956Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:36.956Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.956Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:36.963Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:36.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:36.964Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:36.966Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:36.966Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:22:54.054Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:54.055Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:22:54.112Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.166Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.166Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.180Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.181Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:22:54.182Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.182Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:22:54.187Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:22:54.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:22:54.189Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:22:54.191Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:22:54.191Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:23:25.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:25.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:23:25.769Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.823Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.824Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.837Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.838Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:25.838Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.838Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:25.842Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:25.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:25.843Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:25.845Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:23:25.845Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:23:41.218Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:41.219Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:23:41.275Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.329Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.330Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.330Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.330Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.344Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.345Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[19]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:23:41.345Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.345Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_desrription_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:23:41.353Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:23:41.354Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[21]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[30]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:23:41.354Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:23:41.356Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:23:41.356Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:29:46.244Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:29:46.245Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:29:46.296Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.350Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.351Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.351Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.352Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.372Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:29:46.373Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.374Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:29:46.380Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:29:46.381Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:29:46.381Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:30:12.924Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:30:12.925Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:30:12.925Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:30:12.975Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.030Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.031Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:13.031Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.032Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.052Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.054Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[2]++;cov_17iwyeiy26.s[18]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[19]++;\n    console.log(request.url.query.id);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[20]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:30:13.054Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.054Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[27]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[32]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:30:13.059Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:30:13.061Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:30:13.061Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:34:26.613Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[27]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[28]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[30]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[36]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:34:26.614Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:34:26.667Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:34:26.721Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:34:26.723Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:26.723Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:34:31.685Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:34:31.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[20]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[21]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[0][0]++;cov_17iwyeiy26.s[22]++;\n    findUserWithId(request.url.query); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[0][1]++;}cov_17iwyeiy26.s[24]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:34:31.686Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:35:53.575Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:35:53.576Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:35:53.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:35:53.683Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:35:53.684Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:35:53.684Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:36:37.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:36:37.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:36:37.765Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:36:37.822Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:36:37.823Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:37.823Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:36:42.784Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:36:42.785Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  console.log(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[23]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    findUserWithId(request.url.query.id); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:36:42.785Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:37:52.775Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:37:52.776Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:37:52.777Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:37:52.827Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:37:52.878Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:37:52.880Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:52.880Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:37:57.840Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:37:57.841Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[22]++;\n  if (request.url.query) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[23]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:37:57.842Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:02.847Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:02.850Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:02.850Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:02.851Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:38:02.851Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:38:26.204Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:26.205Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:38:26.256Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:26.310Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:26.311Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.311Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:26.311Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:26.330Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:26.331Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:38:26.331Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:38:31.334Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:38:31.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:38:31.335Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:38:31.336Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:38:31.336Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:39:28.685Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:39:28.686Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:39:28.744Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:28.795Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:28.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.796Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:39:28.796Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:28.809Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:28.810Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    let test = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    console.log(test); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:39:28.810Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:39:33.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:39:33.819Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:39:33.819Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:39:33.821Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:39:33.821Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:40:51.159Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:40:51.161Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:40:51.215Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.273Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.273Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.273Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.287Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.288Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:40:51.288Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:40:51.293Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:40:51.295Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:40:51.295Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:40:51.298Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:40:51.298Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:41:38.142Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:41:38.143Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:41:38.193Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.248Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.249Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.265Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.266Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:41:38.266Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:41:38.272Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:38.273Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:41:38.273Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:46:53.963Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:46:53.964Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:46:54.018Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.073Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.074Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:54.074Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.075Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.087Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.088Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:46:54.088Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:46:54.091Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:46:54.091Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:46:54.095Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:46:54.097Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:46:54.097Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:46:54.099Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:46:54.099Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:49:53.633Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:49:53.634Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:49:53.684Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.737Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.738Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.738Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.740Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.752Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.753Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:49:53.753Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.754Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:49:53.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:49:53.757Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:49:53.757Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:49:53.762Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:49:53.764Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:49:53.764Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:49:53.765Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:49:53.765Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:50:45.038Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:50:45.039Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:50:45.093Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.108Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.109Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.109Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.110Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.121Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.122Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:50:45.122Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.123Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:50:45.123Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:50:45.126Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:50:45.126Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:50:45.130Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:50:45.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  console.log(users); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:50:45.131Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:50:45.133Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:50:45.133Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:52:31.941Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:31.941Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:31.942Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:52:31.992Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.050Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.051Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:32.051Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.051Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.064Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.065Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:52:32.065Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:52:32.069Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:52:32.069Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:32.077Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:32.078Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:52:32.078Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:52:43.785Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:43.786Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:52:43.836Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.892Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.893Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.893Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.893Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.905Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.906Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  request.body = users; /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:52:43.906Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.906Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:52:43.907Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.909Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.910Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:52:43.910Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:52:43.910Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:52:43.917Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:52:43.918Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:52:43.918Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:52:43.919Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:52:43.919Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:53:49.008Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:53:49.009Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:53:49.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.115Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.115Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.115Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.127Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.128Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:53:49.128Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.131Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.131Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:53:49.131Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:53:49.132Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:53:49.136Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:53:49.137Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:53:49.137Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:53:49.138Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:53:49.138Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:54:08.378Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:54:08.379Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:54:08.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.486Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.487Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.487Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.488Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.body); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:54:08.503Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.504Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:54:08.504Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:54:08.507Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:54:08.507Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:54:08.513Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:54:08.514Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:54:08.514Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:55:19.023Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:19.024Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:55:19.076Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.129Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.130Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.130Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.130Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.141Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.142Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:19.142Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.142Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:55:19.143Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:55:19.146Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:55:19.146Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:19.150Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:19.151Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:55:19.151Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:55:44.700Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:44.701Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:55:44.758Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.811Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.812Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.812Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.812Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.825Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name');\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[25]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[26]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[29]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.826Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:55:44.826Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:55:44.829Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:55:44.829Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:55:44.834Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:55:44.835Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[31]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[32]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[33]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[34]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[35]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[36]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[37]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[38]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[40]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:55:44.835Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:55:44.836Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:55:44.836Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:56:10.042Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:10.043Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:56:10.093Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.152Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.153Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.153Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.153Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.165Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[24]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[26]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[27]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[28]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[30]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.166Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:56:10.166Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.169Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.170Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:56:10.170Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:56:10.170Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:10.174Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[32]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[38]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[39]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[41]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[42]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:10.175Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:56:10.175Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:56:46.414Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[33]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[39]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[40]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:46.415Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:56:46.500Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.556Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.557Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.557Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.558Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.570Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  console.log(request.url.pathname); /* istanbul ignore next */cov_17iwyeiy26.s[24]++;\n  if (request.url.pathname !== '/api/users') {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;cov_17iwyeiy26.s[25]++;\n    sendStatus(response, 404, 'invalid path name'); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[28]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[29]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[30]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[31]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.571Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:56:46.571Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.574Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.574Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:56:46.575Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:56:46.575Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[33]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}cov_17iwyeiy26.s[39]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;cov_17iwyeiy26.s[40]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[42]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[43]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:56:46.579Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:56:46.580Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:56:46.580Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:58:57.374Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:58:57.375Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:58:57.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.448Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.449Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.461Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.462Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:58:57.462Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.466Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.466Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:58:57.466Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:58:57.467Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:58:57.472Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:58:57.473Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:58:57.473Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T05:59:27.711Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:59:27.711Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:59:27.712Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T05:59:27.772Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.828Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.841Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.842Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T05:59:27.842Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T05:59:27.845Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T05:59:27.845Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:59:27.850Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:59:27.852Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T05:59:27.852Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:01:10.493Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:01:10.494Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:01:10.554Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:01:10.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:01:10.609Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:01:10.609Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:01:10.609Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:03:37.345Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:03:37.346Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:03:37.396Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:03:37.451Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:03:37.452Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:03:37.452Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:03:37.452Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:05:37.457Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:05:37.458Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:05:37.508Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:05:37.565Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:05:37.566Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:05:37.566Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:05:37.566Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:05:50.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:05:50.339Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:05:50.391Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:05:50.407Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:05:50.408Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:05:50.408Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:05:50.408Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:07:45.298Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:07:45.299Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:07:45.300Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:07:45.350Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:07:45.405Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:07:45.406Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:07:45.406Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:07:45.406Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:08:47.052Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:08:47.053Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:08:47.111Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:08:47.167Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:08:47.167Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:08:47.168Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:08:47.168Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:08:57.189Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:08:57.190Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:08:57.249Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:08:57.306Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:08:57.307Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:08:57.307Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:08:57.307Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:09:04.528Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:09:04.529Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:09:04.584Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.637Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.638Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.638Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.638Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:09:04.651Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.652Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:09:04.652Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:09:04.656Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:09:04.656Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:09:04.661Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:09:04.662Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:09:04.662Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:09:04.663Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:09:04.663Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:12:52.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:12:52.427Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:12:52.485Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:12:52.539Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:12:52.540Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:12:52.540Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:12:52.540Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:13:04.072Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:13:04.073Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:13:04.131Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.186Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.187Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.187Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.187Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.199Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.200Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:13:04.200Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.203Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.204Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:13:04.204Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:13:04.204Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:13:04.208Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:13:04.209Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:13:04.209Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:13:04.211Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:13:04.211Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:13:04.211Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:33:22.824Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:33:22.825Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:33:22.879Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.935Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.936Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.936Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.937Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.950Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.950Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:33:22.950Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:22.953Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:33:22.953Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.958Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.959Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:33:22.959Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.962Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:33:22.963Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:33:22.963Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:33:22.965Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:33:22.965Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:34:35.796Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:34:35.797Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:34:35.855Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:34:35.910Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:34:35.911Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:35.911Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:34:35.912Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:34:35.912Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:34:44.547Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users);\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:34:44.548Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:34:44.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:34:44.663Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:34:44.664Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:34:44.664Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:28.335Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:35:28.336Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:35:28.388Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:35:28.446Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:35:28.447Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:28.447Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:35:28.447Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:35:28.448Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:35:42.345Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.346Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:42.346Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 404, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:35:42.347Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:35:42.400Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:35:42.457Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:35:42.458Z"}
{"name":"test_name_1","description":"test_description_1","level":"info","message":"","timestamp":"2017-12-07T06:35:42.458Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:27.255Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:27.256Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:27.257Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:27.314Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:27.371Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:27.372Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:27.372Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:27.372Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:42.682Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.682Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:42.683Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:42.740Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:42.794Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:42.796Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:42.796Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:42.796Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:36:49.425Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:49.426Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:36:49.482Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:36:49.538Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:36:49.539Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:36:49.539Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:36:49.540Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:37:05.280Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:37:05.281Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:05.282Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:37:05.336Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:37:05.387Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:05.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:05.388Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:37:05.389Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:37:49.713Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved);\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:49.714Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:37:49.765Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:37:49.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:37:49.825Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved);\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:37:49.825Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:37:49.827Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:38:27.533Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved.getId());\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:38:27.534Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:38:27.590Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:38:27.648Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:38:27.649Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[44]++;\n    console.log(userToBeRemoved.getId());\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:38:27.649Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:38:27.650Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:39:19.336Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.337Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log('these should match at least 1x', userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:39:19.338Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:39:19.392Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:39:19.449Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:39:19.451Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log('these should match at least 1x', userToBeRemoved.getId(), user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:39:19.451Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:39:19.452Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:40:56.829Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:40:56.830Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:40:56.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:40:56.831Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:40:56.890Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:40:56.949Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:40:56.950Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:40:56.950Z"}
{"level":"info","message":"Responding with a 204 code and the following data","timestamp":"2017-12-07T06:40:56.951Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:46:59.754Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:46:59.755Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:46:59.815Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:46:59.872Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:46:59.873Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:46:59.873Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:46:59.874Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:46:59.874Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.875Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:47:04.876Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:47:04.930Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:47:04.948Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:47:04.949Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:47:04.949Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:47:04.950Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:47:04.950Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:04.614Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:04.615Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:50:04.674Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:04.732Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:04.733Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:04.733Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:04.734Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:50:04.734Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:50:41.692Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:50:41.693Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:50:41.748Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.801Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.802Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.802Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.802Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.817Z"}
{"meta":false,"level":"info","message":"","timestamp":"2017-12-07T06:50:41.817Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.824Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:41.825Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:50:41.825Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.830Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:50:41.831Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:50:41.831Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:50:41.834Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:50:41.835Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:50:41.835Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:52:03.473Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:52:03.474Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:52:03.530Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.582Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.583Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.583Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.583Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:52:03.596Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.597Z"}
{"meta":false,"level":"info","message":"","timestamp":"2017-12-07T06:52:03.597Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.603Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.603Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:52:03.603Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:52:03.604Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.608Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:52:03.609Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:52:03.609Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:52:03.613Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:52:03.613Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:52:03.613Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:53:29.001Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:53:29.002Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:53:29.060Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:53:29.114Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:53:29.115Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:53:29.115Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:53:29.115Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:55:08.016Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:55:08.017Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:55:08.068Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:08.123Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:08.124Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:08.124Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:08.124Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:55:23.033Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:55:23.034Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:55:23.085Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.099Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.100Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.112Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.113Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:55:23.113Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.113Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:55:23.119Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:55:23.119Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.122Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:55:23.123Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:55:23.123Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:55:23.126Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:55:23.126Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:55:23.126Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:56:00.606Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[42]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[43]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[45]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[46]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:56:00.607Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:56:00.669Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.731Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.732Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.732Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.732Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.747Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.748Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[23]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[24]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[25]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[27]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:00.748Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.748Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:00.754Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:56:00.754Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.757Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[29]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[30]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[31]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[32]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[33]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[34]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[35]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[36]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[37]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[38]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[39]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:00.758Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:56:00.758Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:00.761Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:00.761Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:56:00.761Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:56:46.698Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:56:46.699Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:56:46.750Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.805Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.806Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.817Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.818Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:56:46.818Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.818Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:46.824Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:56:46.824Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.827Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:56:46.828Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:56:46.828Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:56:46.832Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:56:46.833Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:56:46.833Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:57:13.368Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:57:13.369Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:57:13.420Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.475Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.477Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.477Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.477Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:13.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.491Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.498Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:13.498Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:57:13.498Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.502Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:13.503Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:13.504Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:13.504Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:57:13.504Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:13.507Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:13.507Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:57:13.507Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:57:38.366Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:57:38.367Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:57:38.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:57:38.368Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:57:38.422Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.477Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.478Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.478Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.479Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.490Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.491Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:57:38.491Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.492Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.497Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.498Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:38.498Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:57:38.498Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:57:38.501Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:57:38.502Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:57:38.502Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:57:38.504Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:57:38.504Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:57:38.505Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:02.061Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:02.062Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:02.063Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:02.116Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.171Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.172Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.172Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.172Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:02.184Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.185Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:02.191Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:02.191Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.194Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:02.195Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:02.196Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:02.196Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:02.196Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:02.199Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:02.199Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:02.199Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:22.239Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:22.240Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:22.241Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:22.322Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.398Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.398Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.398Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.421Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.422Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:22.422Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.423Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.438Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.438Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:22.439Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:22.439Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.443Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:22.444Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:22.444Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:22.450Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:22.450Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:22.451Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T06:58:57.291Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T06:58:57.292Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T06:58:57.346Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.362Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.363Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.363Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.363Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.375Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.376Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T06:58:57.377Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.377Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.383Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.384Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:57.384Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T06:58:57.384Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.388Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T06:58:57.388Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T06:58:57.389Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T06:58:57.389Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T06:58:57.389Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T06:58:57.392Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T06:58:57.393Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T06:58:57.393Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:10:24.703Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:10:24.704Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:10:24.761Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:10:24.815Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:10:24.816Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:10:24.816Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:10:24.817Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:10:24.817Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:15:31.288Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:15:31.289Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:15:31.348Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.402Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.402Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.403Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.403Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.415Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.416Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:15:31.416Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.417Z"}
[]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.422Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.423Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.423Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:15:31.423Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.426Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.427Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:15:31.427Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:15:31.428Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:15:31.428Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.431Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.431Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:15:31.431Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:15:31.433Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:15:31.434Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:15:31.434Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:15:31.435Z"}
{"message":"userToBeRemoved.getId is not a function","stack":"TypeError: userToBeRemoved.getId is not a function\n    at users.filter.user (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:74:30)\n    at Array.filter (<anonymous>)\n    at Object.<anonymous>.router.delete (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/route/user-router.js:72:83)\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:51:14)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:15:31.435Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:23:05.187Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:23:05.188Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:23:05.271Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.355Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.356Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:23:05.356Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:23:05.356Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.378Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.378Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:23:05.378Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:23:05.379Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.384Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.385Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:23:05.385Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:23:05.386Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:23:05.386Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.394Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:23:05.394Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:23:05.394Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:23:05.397Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:25:11.126Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:25:11.127Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:25:11.178Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.232Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.233Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:25:11.233Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:25:11.233Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.244Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.245Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:25:11.245Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:25:11.245Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:25:11.249Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:25:11.250Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:25:11.250Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.252Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:25:11.253Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:25:11.253Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[5][1]++;}\n}","timestamp":"2017-12-07T07:25:11.256Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:27:45.106Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:45.107Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:27:45.157Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:45.214Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:27:45.215Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:27:54.005Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:54.006Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:27:54.092Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.115Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.116Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:27:54.116Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:27:54.116Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.135Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.137Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:27:54.137Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:27:54.137Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.144Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:27:54.145Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:27:54.145Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.149Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:27:54.150Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:27:54.150Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:27:54.156Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:27:54.157Z"}
{"level":"info","message":"Adding a GET url and callback","timestamp":"2017-12-07T07:28:14.480Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Adding a DELETE url and callback","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"/api/users","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:28:14.481Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T07:28:14.536Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.593Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.594Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[3]++;cov_17iwyeiy26.s[24]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[1][0]++;\n    const foundUserWithId = /* istanbul ignore next */(cov_17iwyeiy26.s[25]++, findUserWithId(request.url.query.id)); /* istanbul ignore next */cov_17iwyeiy26.s[26]++;\n    sendJSON(response, 200, foundUserWithId); /* istanbul ignore next */cov_17iwyeiy26.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[1][1]++;}cov_17iwyeiy26.s[28]++;\n  sendJSON(response, 200, users);\n}","timestamp":"2017-12-07T07:28:14.594Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:28:14.594Z"}
[{"name":"test_name_1","description":"test_description_1"},{"name":"test_name_2","description":"test_description_2"}]
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.606Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.606Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:28:14.607Z"}
{"message":"Cannot read property 'toString' of undefined","stack":"TypeError: Cannot read property 'toString' of undefined\n    at requestParser.parse.then.request (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/router.js:49:37)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T07:28:14.607Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.610Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.611Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[4]++;cov_17iwyeiy26.s[30]++;\n  if (!request.body) {/* istanbul ignore next */cov_17iwyeiy26.b[2][0]++;cov_17iwyeiy26.s[31]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_17iwyeiy26.s[32]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[2][1]++;}cov_17iwyeiy26.s[33]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_17iwyeiy26.b[3][0]++;cov_17iwyeiy26.s[34]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_17iwyeiy26.s[35]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[3][1]++;}cov_17iwyeiy26.s[36]++;\n  if (!request.body.description) {/* istanbul ignore next */cov_17iwyeiy26.b[4][0]++;cov_17iwyeiy26.s[37]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_17iwyeiy26.s[38]++;\n    return;\n  } else /* istanbul ignore next */{cov_17iwyeiy26.b[4][1]++;}\n\n  let user = /* istanbul ignore next */(cov_17iwyeiy26.s[39]++, new User(request.body.name, request.body.description)); /* istanbul ignore next */cov_17iwyeiy26.s[40]++;\n  users.push(user); /* istanbul ignore next */cov_17iwyeiy26.s[41]++;\n  sendJSON(response, 200, user);\n}","timestamp":"2017-12-07T07:28:14.611Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T07:28:14.611Z"}
{"name":"name","description":"description","level":"info","message":"","timestamp":"2017-12-07T07:28:14.612Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.614Z"}
{"level":"info","message":"__REQUEST_ERROR__","timestamp":"2017-12-07T07:28:14.614Z"}
{"message":"Unexpected end of JSON input","stack":"SyntaxError: Unexpected end of JSON input\n    at JSON.parse (<anonymous>)\n    at IncomingMessage.request.on (/home/cameron/Programming/CodeFellows/401/labs/08-09-vanilla-rest-server/lab-cameron/lib/request-parser.js:25:31)\n    at IncomingMessage.emit (events.js:159:13)\n    at endReadableNT (_stream_readable.js:1054:12)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","level":"info","timestamp":"2017-12-07T07:28:14.615Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_17iwyeiy26.f[5]++;cov_17iwyeiy26.s[43]++;\n  if (request.url.query.id) {/* istanbul ignore next */cov_17iwyeiy26.b[5][0]++;\n    const userToBeRemoved = /* istanbul ignore next */(cov_17iwyeiy26.s[44]++, findUserWithId(request.url.query.id));\n    const updatedUsers = /* istanbul ignore next */(cov_17iwyeiy26.s[45]++, users.filter(user => {/* istanbul ignore next */cov_17iwyeiy26.f[6]++;cov_17iwyeiy26.s[46]++;\n      console.log(user.name, user.getId()); /* istanbul ignore next */cov_17iwyeiy26.s[47]++;\n      return userToBeRemoved.getId() === user.getId();\n    })); /* istanbul ignore next */cov_17iwyeiy26.s[48]++;\n    users = updatedUsers; /* istanbul ignore next */cov_17iwyeiy26.s[49]++;\n    sendJSON(response, 204, users); /* istanbul ignore next */cov_17iwyeiy26.s[50]++;\n    return;\n  } else {/* istanbul ignore next */cov_17iwyeiy26.b[5][1]++;cov_17iwyeiy26.s[51]++;\n    sendStatus(response, 400, 'no id provided'); /* istanbul ignore next */cov_17iwyeiy26.s[52]++;\n    return;\n  }\n}","timestamp":"2017-12-07T07:28:14.619Z"}
{"level":"info","message":"Responding with a 400 code due to no id provided","timestamp":"2017-12-07T07:28:14.619Z"}
